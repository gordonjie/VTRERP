<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Kingdee.BOS.BusinessEntity</name>
    </assembly>
    <members>
        <member name="T:Kingdee.BOS.BusinessEntity.AccountBook">
            <summary>
            账簿
            </summary>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.AccountBook.#ctor(Kingdee.BOS.Orm.DataEntity.DynamicObject)">
            <summary>
            构造函数 
            </summary>
            <param name="obj"></param>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.AccountBook.AccountBookId">
            <summary>
            唯一标识
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.AccountBook.Number">
            <summary>
            编码
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.AccountBook.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.AccountBook.Description">
            <summary>
            描述
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.AccountBook.AccountOrgID_Id">
            <summary>
            组织机构内码
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.AccountBook.AccountOrgID">
            <summary>
            组织机构对象
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.AccountBook.AccountTableID">
            <summary>
            科目表id
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.AccountBook.BegDate">
            <summary>
            生效日期
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.AccountBook.EndDate">
            <summary>
            失效日期
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.AccountBook.BookType">
            <summary>
            是否主账簿
            </summary>
        </member>
        <member name="T:Kingdee.BOS.BusinessEntity.BillMultiView">
            <summary>
            单据多视图动态实体对象
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BillMultiView.Id">
            <summary>
            唯一标识
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BillMultiView.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BillTrack.JsonData.TrackJsonData.#ctor(Kingdee.BOS.BusinessEntity.BillTrack.BillTrackData,System.Int32)">
            <summary>
            
            </summary>
            <param name="billTrackData">单据上下查元数据</param>
            <param name="_cultureLanID">语言代码</param>
        </member>
        <member name="T:Kingdee.BOS.BusinessEntity.BillTrack.BillLink">
            <summary>
            节点之间的关系
            </summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.BillTrack.BillLink.BillLinkType">
            <summary>BillLink的动态类型</summary>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BillTrack.BillLink.#ctor(Kingdee.BOS.Orm.DataEntity.DynamicObject)">
            <summary>创建 BillLink 实例</summary>
            <param name="obj">视图访问类实际操作的动态实体，不能为null</param>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BillTrack.BillLink.op_Implicit(Kingdee.BOS.Orm.DataEntity.DynamicObject)~Kingdee.BOS.BusinessEntity.BillTrack.BillLink">
            <summary>支持从DynamicObject隐式转化到 BillLink类型</summary>
            <param name="obj">要隐式转换的动态实体</param>
            <returns>新构建的 BillLink对象</returns>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BillTrack.BillLink.Create(Kingdee.BOS.BusinessEntity.BillTrack.BillNode,Kingdee.BOS.BusinessEntity.BillTrack.BillNode)">
            <summary>
            创建一个实体关系
            </summary>
            <param name="sourceNode">源单据节点</param>
            <param name="targetNode">目标单据节点</param>
            <param name="id">默认值为GUID, 所以一般不需要指定</param>
            <returns></returns>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.BillTrack.BillLink.IdProperty">
            <summary>
            Id的属性描述符
            (关系实体唯一标识)
            </summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.BillTrack.BillLink.IsLockProperty">
            <summary>
            IsLock的属性描述符
            (用户是否有权限打开这个关系实体方向对应的叙事簿)
            </summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.BillTrack.BillLink.ShowTitleProperty">
            <summary>
            ShowTitle的属性描述符
            是否显示标题(默认是false)
            </summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.BillTrack.BillLink.SourceNodeProperty">
            <summary>
            SourceNode的属性描述符
            (返回/设置 此连接线的源单据节点)
            </summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.BillTrack.BillLink.TargetNodeProperty">
            <summary>
            TargetNode的属性描述符
            (返回/设置 此连接线的目標单据节点)
            </summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.BillTrack.BillLink.TitleProperty">
            <summary>
            Title的属性描述符
            (关系实体标题)
            </summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.BillTrack.BillLink.DescriptionProperty">
            <summary>
            Description的属性描述符
            (关系实体描述)
            </summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.BillTrack.BillLink.LinkDataProperty">
            <summary>
            LinkData的属性描述符
            (实体关系上路由的明细数据)
            </summary>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BillTrack.BillLink.AddLinkCopyData(System.Collections.Generic.List{System.String})">
            <summary>
            添加关联复制数据
            </summary>            
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BillTrack.BillLink.AddStateRouteData(System.String,System.String,System.String)">
            <summary>
            添加状态路由数据
            </summary>
            <param name="stateKey">状态键</param>
            <param name="stateTrackDiagramKey">状态迁移图键</param>
            <returns></returns>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BillTrack.BillLink.Id">
            <summary>
            返回/设置 关系实体唯一标识
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BillTrack.BillLink.IsLock">
            <summary>
            返回/设置 用户是否有权限打开这个关系实体方向对应的叙事簿
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BillTrack.BillLink.ShowTitle">
            <summary>
            返回/设置是否显示标题(默认是false)
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BillTrack.BillLink.SourceNodeId">
            <summary>
            返回源单据节点键
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BillTrack.BillLink.TargetNodeId">
            <summary>
            返回目標单击节点键
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BillTrack.BillLink.Title">
            <summary>
            返回/设置 关系实体多语言的标题
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BillTrack.BillLink.Description">
            <summary>
            返回/设置 关系实体多语言的描述
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BillTrack.BillLink.LinkData">
            <summary>
            返回/设置 单据实体关系上路由的明细数据
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BillTrack.BillLink.SourceLinkIds">
            <summary>
            源单关联分录Id
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BillTrack.BillLink.TargetLinkIds">
            <summary>
            目标单关联分录Id
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BillTrack.BillLink.Parent">
            <summary>
            返回 所在的根对象
            </summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.BillTrack.BillTrackData.BillTrackDataType">
            <summary>BillTrackData的动态类型</summary>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BillTrack.BillTrackData.#ctor(Kingdee.BOS.Orm.DataEntity.DynamicObject)">
            <summary>创建BillTrackData 实例</summary>
            <param name="obj">视图访问类实际操作的动态实体，不能为null</param>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BillTrack.BillTrackData.op_Implicit(Kingdee.BOS.Orm.DataEntity.DynamicObject)~Kingdee.BOS.BusinessEntity.BillTrack.BillTrackData">
            <summary>支持从DynamicObject隐式转化到 BillTrackData类型</summary>
            <param name="obj">要隐式转换的动态实体</param>
            <returns>新构建的 BillTrackData对象</returns>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BillTrack.BillTrackData.Create">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.BillTrack.BillTrackData.LayoutProperty">
            <summary>Layout(布局方式 默认: false)</summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.BillTrack.BillTrackData.EditableProperty">
            <summary>Layout(是否可以编辑 默认: true)</summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.BillTrack.BillTrackData.NodesProperty">
            <summary>
            Nodes的属性描述符
            (返回各个分录在此状态上路由的明细数据)
            </summary>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BillTrack.BillTrackData.AddNode(System.String,System.String,System.String)">
            <summary>
            增加单据节点
            </summary>
            <param name="formKey">关联单据标识</param>
            <param name="title">关联节点标题</param>
            <param name="description">关联节点描述</param>        
            <returns></returns>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BillTrack.BillTrackData.AddNodeLinkCopy(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String)">
            <summary>
            添加关联复制节点
            </summary>
            <param name="formKey">关联单据标识</param>
            <param name="title">关联节点标题</param>
            <param name="linkIds">关联记录内码</param>
            <param name="linkIds">关联表TableID</param>
            <param name="description">关联节点描述</param>
            <returns></returns>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.BillTrack.BillTrackData.LinksProperty">
            <summary>
            Links的属性描述符
            (返回各个分录在此状态上路由的明细数据)
            </summary>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BillTrack.BillTrackData.AddLink(Kingdee.BOS.BusinessEntity.BillTrack.BillNode,Kingdee.BOS.BusinessEntity.BillTrack.BillNode)">
            <summary>
            创建一个单据连线
            </summary>
            <param name="sourceNode">源单据节点</param>
            <param name="targetNode">目标单据节点</param>        
            <returns></returns>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BillTrack.BillTrackData.AddLinkCopy(Kingdee.BOS.BusinessEntity.BillTrack.BillNode,Kingdee.BOS.BusinessEntity.BillTrack.BillNode,System.Collections.Generic.List{System.String})">
            <summary>
            创建一个关联复制单据连线
            </summary>
            <param name="sourceNode">源单据节点</param>
            <param name="targetNode">目标单据节点</param>
            <param name="linkIds">关联记录内码</param>
            <returns></returns>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BillTrack.BillTrackData.FindNodeById(System.String)">
            <summary>
            根据节点Id查找节点
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BillTrack.BillTrackData.FindLinkById(System.String)">
            <summary>
            根据连接点Id查找连接
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BillTrack.BillTrackData.FindEndNode(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            给定一批节点Id，确定这一批节点中最末级的节点。
            </summary>
            <param name="Nodes">一批节点Id集合</param>
            <returns>最末级的节点。</returns>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BillTrack.BillTrackData.GetLinkByNode(Kingdee.BOS.BusinessEntity.BillTrack.BillNode,Kingdee.BOS.BusinessEntity.BillTrack.BillNode)">
            <summary>
            给定一个开始节点和结束节点，找到他们的直接连线。
            </summary>
            <param name="sourceNode">开始节点</param>
            <param name="targetNode">结束节点</param>
            <returns>他们的直接连线</returns>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BillTrack.BillTrackData.Layout">
            <summary>
            返回/设置布局方式 默认: false
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BillTrack.BillTrackData.Editable">
            <summary>
            返回/设置 是否可以编辑(默认: true)
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BillTrack.BillTrackData.Nodes">
            <summary>
            返回/设置 单据节点上路由的明细数据
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BillTrack.BillTrackData.Links">
            <summary>
            返回/设置 单据节点上路由的明细数据
            </summary>
        </member>
        <member name="T:Kingdee.BOS.BusinessEntity.BillTrack.BillNode">
            <summary>
            关联上下查单据节点
            </summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.BillTrack.BillNode.BillNodeType">
            <summary>BillNode的动态类型</summary>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BillTrack.BillNode.#ctor(Kingdee.BOS.Orm.DataEntity.DynamicObject)">
            <summary>创建 BillNode 实例</summary>
            <param name="obj">视图访问类实际操作的动态实体，不能为null</param>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BillTrack.BillNode.op_Implicit(Kingdee.BOS.Orm.DataEntity.DynamicObject)~Kingdee.BOS.BusinessEntity.BillTrack.BillNode">
            <summary>支持从DynamicObject隐式转化到 BillNode类型</summary>
            <param name="obj">要隐式转换的动态实体</param>
            <returns>新构建的 BillNode对象</returns>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BillTrack.BillNode.Create(System.String,System.String,System.String)">
            <summary>
            创建一个单据节点
            </summary>
            <param name="formKey">单据节点标识</param>
            <param name="title">单据节点标题</param>
            <param name="description">单据节点描述</param>
            <param name="id">默认值为GUID, 所以一般不需要指定</param>
            <returns></returns>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BillTrack.BillNode.BuildCurrentNode(System.Collections.Generic.List{System.String},System.String,System.Boolean)">
            <summary>
            构造上下查当前节点
            </summary>
            <param name="formKey">单据标识</param>
            <param name="linkIds">关联内码</param>     
            <param name="isLinkCopy">是否关联复制</param>
            <returns></returns>   
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.BillTrack.BillNode.IdProperty">
            <summary>
            Id的属性描述符
            (单据节点唯一标识)
            </summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.BillTrack.BillNode.FormKeyProperty">
            <summary>
            FormKey的属性描述符
            (当前单据的标识)
            </summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.BillTrack.BillNode.XProperty">
            <summary>
            X坐标属性描述符
            (可以不设置)
            </summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.BillTrack.BillNode.YProperty">
            <summary>
            Y坐标属性描述符
            (可以不设置)
            </summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.BillTrack.BillNode.IsLockProperty">
            <summary>
            IsLock的属性描述符
            (用户是否有权限打开这个单据节点对应的叙事簿)
            </summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.BillTrack.BillNode.CanExpandProperty">
            <summary>
            CanExpand的属性描述符
            (当前单据节点是否有扩展单据节点)
            </summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.BillTrack.BillNode.NodeStateProperty">
            <summary>
            NodeState的属性描述符
            (0：未处理，代表是否有扩展节点还不知道  1：当前  2：已处理，默认是0)
            </summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.BillTrack.BillNode.NodeDirectionProperty">
            <summary>
            NodeDirection的属性描述符    
            (当前单据节点所处方向 0: 当前单据 1：上游单据， 2：下游单据)
            </summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.BillTrack.BillNode.TitleProperty">
            <summary>
            Title的属性描述符
            (单据节点标题)
            </summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.BillTrack.BillNode.DescriptionProperty">
            <summary>
            Description的属性描述符
            (单据节点描述)
            </summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.BillTrack.BillNode.IsLinkCopyProperty">
            <summary>
            IsLinkCopy的属性描述符
            (当前单据节点是否是关联复制单据)
            </summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.BillTrack.BillNode.NodeDataProperty">
            <summary>
            NodeData的属性描述符
            (单据节点上路由的明细数据)
            </summary>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BillTrack.BillNode.AddLinkCopyData(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            添加关联复制数据
            </summary>
            <param name="tableId">关联表Id</param>
            <param name="linkIds">关联内码列表</param>      
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BillTrack.BillNode.AddLinkCopyData(System.Collections.Generic.List{System.String})">
            <summary>
            添加关联复制数据
            </summary>        
            <param name="linkIds">关联内码列表</param>        
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BillTrack.BillNode.AddStateRouteData(System.String,System.String,System.String)">
            <summary>
            添加状态路由数据
            </summary>
            <param name="stateKey">状态键</param>
            <param name="stateTrackDiagramKey">状态迁移图键</param>
            <returns></returns>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.BillTrack.BillNode.LinkEntryProperty">
            <summary>
            LinkEntry的属性描述符
            (关联实体属性)
            </summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.BillTrack.BillNode.TrackUpDownLinkEntryProperty">
            <summary>
            LinkEntry的属性描述符
            (关联实体属性)
            </summary>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BillTrack.BillNode.GetNextNodes">
            <summary>
            获取所有直接下级单据
            </summary>
            <returns>下级单据集合</returns>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BillTrack.BillNode.GetPreviousNodes">
            <summary>
            返回此单据的直接上级单据集合
            </summary>
            <returns>直接上级单据。</returns>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BillTrack.BillNode.GetNextLinks">
            <summary>
            获取所有直接下级连接
            </summary>
            <returns>下级连接集合</returns> 
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BillTrack.BillNode.GetAllPreviousNodes">
            <summary>
            获取指定单据的所有上级单据
            </summary>
            <param name="Node">指定单据</param>
            <returns>所有上级单据集合</returns>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BillTrack.BillNode.GetAllNextNodes">
            <summary>
            获取指定单据的所有下级单据
            </summary>
            <param name="Node">指定单据</param>
            <returns>所有下级单据集合</returns>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BillTrack.BillNode.GetPreviousLinkIds(Kingdee.BOS.BusinessEntity.BillTrack.BillNode)">
            <summary>
            得到指定上游单据的关联分录Id
            </summary>
            <param name="previousNode"></param>
            <returns></returns>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BillTrack.BillNode.GetNextLinkIds(Kingdee.BOS.BusinessEntity.BillTrack.BillNode)">
            <summary>
            得到指定下游单据的关联分录Id
            </summary>
            <param name="nextNode"></param>
            <returns></returns>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BillTrack.BillNode.Id">
            <summary>
            返回/设置 单据节点唯一标识
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BillTrack.BillNode.FormKey">
            <summary>
            返回/设置 当前单据的标识
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BillTrack.BillNode.X">
            <summary>
            返回/设置 X坐标(可以不设置)
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BillTrack.BillNode.Y">
            <summary>
            返回/设置 Y坐标(可以不设置)
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BillTrack.BillNode.IsLock">
            <summary>
            用户是否有权限打开这个单据节点对应的叙事簿, 默认为false
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BillTrack.BillNode.CanExpand">
            <summary>
            返回/设置 当前单据节点是否有扩展单据节点, 默认为false
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BillTrack.BillNode.NodeState">
            <summary>
            返回/设置单据状态 (0：未处理  1：当前  2：已处理，默认是0)
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BillTrack.BillNode.NodeDirection">
            <summary>
            返回/设置 单据节点位置方向 (当前单据节点所处方向 0: 当前单据 1：上游单据， 2：下游单据)
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BillTrack.BillNode.Title">
            <summary>
            返回/设置 单据节点多语言的标题
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BillTrack.BillNode.Description">
            <summary>
            返回/设置 单据节点多语言的描述
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BillTrack.BillNode.IsLinkCopy">
            <summary>
            返回/设置 当前单据节点是否是关联复制单据, 默认为false
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BillTrack.BillNode.NodeData">
            <summary>
            返回/设置 单据节点上路由的明细数据
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BillTrack.BillNode.LinkEntry">
            <summary>
            返回/设置 关联实体属性； 与TrackUpDownLinkEntry的区别：适用于发起联查的单据
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BillTrack.BillNode.TrackUpDownLinkEntry">
            <summary>
            返回/设置 关联实体属性；与LinkEntry的区别：适用于联查目标单据
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BillTrack.BillNode.Parent">
            <summary>
            返回 所在的根对象
            </summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.BillTrack.StateRouteData.StateRouteDataType">
            <summary>StateRouteData的动态类型</summary>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BillTrack.StateRouteData.#ctor(Kingdee.BOS.Orm.DataEntity.DynamicObject)">
            <summary>创建StateRouteData 实例</summary>
            <param name="obj">视图访问类实际操作的动态实体，不能为null</param>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BillTrack.StateRouteData.op_Implicit(Kingdee.BOS.Orm.DataEntity.DynamicObject)~Kingdee.BOS.BusinessEntity.BillTrack.StateRouteData">
            <summary>支持从DynamicObject隐式转化到 StateRouteData类型</summary>
            <param name="obj">要隐式转换的动态实体</param>
            <returns>新构建的 StateRouteData对象</returns>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BillTrack.StateRouteData.Create(System.String,System.String,System.String)">
            <summary>
            添加状态路由数据（没有状态路由不需要制定）
            </summary>
            <param name="stateKey">状态键</param>
            <param name="stateTrackDiagramKey">状态迁移图键</param>
            <returns></returns>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.BillTrack.StateRouteData.IdProperty">
            <summary>IdProperty的属性描述符</summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.BillTrack.StateRouteData.StateIdProperty">
            <summary>唯一标识属性描述符</summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.BillTrack.StateRouteData.StateKeyProperty">
            <summary>StateKey(状态标识)的属性描述符</summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.BillTrack.StateRouteData.TableIdProperty">
            <summary>TableId的属性描述符</summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.BillTrack.StateRouteData.StateTrackDiagramKeyProperty">
            <summary>StateKey(状态迁移图标识)的属性描述符</summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.BillTrack.StateRouteData.IsCrossStateDiagramProperty">
            <summary>IsCrossStateDiagram(是否跨状态迁移图)的属性描述符)</summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.BillTrack.StateRouteData.DataDetailsProperty">
            <summary>
            DataDetails的属性描述符
            (返回各个分录在此状态上路由的明细数据)
            </summary>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BillTrack.StateRouteData.AddDetail(System.String,System.Decimal,System.String,System.String)">
            <summary>
            添加详细路由数据信息
            </summary>
            <param name="linkId">关联内码</param>
            <param name="tableId">关联TableId</param>
            <param name="linkCId">关联[TableId,LinkId]</param>
            <param name="amount">关联数量</param>
            <returns></returns>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BillTrack.StateRouteData.AddDetails(System.Collections.Generic.List{System.String})">
            <summary>
            添加详细路由数据信息
            </summary>        
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BillTrack.StateRouteData.Id">
            <summary>
            返回/设置主键
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BillTrack.StateRouteData.StateId">
            <summary>
            返回/设置 唯一标识[状态迁移图标识_状态标识])
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BillTrack.StateRouteData.StateKey">
            <summary>
            返回/设置 状态标识  
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BillTrack.StateRouteData.TableId">
            <summary>
            返回/设置 关联TableId
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BillTrack.StateRouteData.StateTrackDiagramKey">
            <summary>
            状态迁移图标识
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BillTrack.StateRouteData.IsCrossStateDiagram">
            <summary>
            返回/设置 是否跨状态迁移图,默认True
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BillTrack.StateRouteData.DataDetails">
            <summary>
            返回各个分录在此状态上路由的明细数据
            </summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.BillTrack.DataDetail.DataDetailType">
            <summary>LinkCId_Amount的动态类型</summary>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BillTrack.DataDetail.#ctor(Kingdee.BOS.Orm.DataEntity.DynamicObject)">
            <summary>创建 DataDetail 实例</summary>
            <param name="obj">视图访问类实际操作的动态实体，不能为null</param>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BillTrack.DataDetail.op_Implicit(Kingdee.BOS.Orm.DataEntity.DynamicObject)~Kingdee.BOS.BusinessEntity.BillTrack.DataDetail">
            <summary>支持从DynamicObject隐式转化到DataDetail类型</summary>
            <param name="obj">要隐式转换的动态实体</param>
            <returns>新构建的DataDetail对象</returns>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BillTrack.DataDetail.Create(System.String,System.Decimal,System.String,System.String)">
            <summary>
            添加详细路由数据信息
            </summary>
            <param name="linkId">关联内码</param>
            <param name="tableId">关联TableId</param>
            <param name="linkCId">关联[TableId,LinkId]</param>
            <param name="amount">关联数量</param>
            <returns></returns>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.BillTrack.DataDetail.IdProperty">
            <summary>IdProperty的属性描述符</summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.BillTrack.DataDetail.LinkIdProperty">
            <summary>LinkId的属性描述符</summary>
        </member>
        <!-- 对于成员“F:Kingdee.BOS.BusinessEntity.BillTrack.DataDetail.SourceIdProperty”忽略有格式错误的 XML 注释 -->
        <member name="F:Kingdee.BOS.BusinessEntity.BillTrack.DataDetail.AmountProperty">
            <summary>Amount的属性描述符</summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.BillTrack.DataDetail.LinkCIdProperty">
            <summary>LinkCId的属性描述符</summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BillTrack.DataDetail.Id">
            <summary>
            返回/设置主键
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BillTrack.DataDetail.LinkId">
            <summary>
            返回/设置关联ID
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BillTrack.DataDetail.SourceId">
            <summary>
            返回/设置关联ID的源单分录ID
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BillTrack.DataDetail.Amount">
            <summary>
            返回/设置 Amount 
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BillTrack.DataDetail.LinkCId">
            <summary>
            返回/设置 LinkCId ([TableID_LinkId])
            </summary>
        </member>
        <member name="T:Kingdee.BOS.BusinessEntity.BillTrack.ViewBusinessFlowBillInfo">
            <summary>
            查看业务流程图的单据信息
            </summary>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BillTrack.ViewBusinessFlowBillInfo.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="formId"></param>
            <param name="entityKey"></param>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BillTrack.ViewBusinessFlowBillInfo.FormId">
            <summary>
            单据
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BillTrack.ViewBusinessFlowBillInfo.Rows">
            <summary>
            发起查看业务流程图的实体行
            </summary>
        </member>
        <member name="T:Kingdee.BOS.BusinessEntity.BillTrack.ViewBusinessFlowParameter">
            <summary>
            查看业务流程图时需传入的参数对象
            </summary>
            <remarks>
            需包含：
            1. 流程图内码集合，必选
            2. 发起单据，可选
            3. 业务流程实例，可选
            </remarks>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BillTrack.ViewBusinessFlowParameter.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BillTrack.ViewBusinessFlowParameter.FlowIds">
            <summary>
            待查看业务流程图，必选
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BillTrack.ViewBusinessFlowParameter.BillInfo">
            <summary>
            发起查看流程图的单据信息，可选：在仅查看流程图、查看业务流程实例的流程图时，不需要设置
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BillTrack.ViewBusinessFlowParameter.Instances">
            <summary>
            业务流程图实例集合，可选：在仅查看流程、查看单据的业务流程图时，不需要设置
            </summary>
        </member>
        <member name="T:Kingdee.BOS.BusinessEntity.BillTrack.ViewLinkDataParameter">
            <summary>
            上下查时需传入的参数对象
            </summary>
            <remarks>
            需包含：
            1. 发起单据及其选择的单据体，必选
            2. 业务流程实例，必选
            3. 联查方向
            4. 转换规则;(因为组件引用关系，暂不提供)
            </remarks>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BillTrack.ViewLinkDataParameter.#ctor(System.String,Kingdee.BOS.BusinessEntity.BillTrack.ViewLinkDataParameter.Enum_LookUpType)">
            <summary>
            构造函数
            </summary>
            <param name="formId">发起上下查的单据</param>
            <param name="lookUpType">联查方向</param>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BillTrack.ViewLinkDataParameter.BillInfo">
            <summary>
            发起上下查的单据数据，必选
            </summary>
        </member>
        <!-- 对于成员“P:Kingdee.BOS.BusinessEntity.BillTrack.ViewLinkDataParameter.Instances”忽略有格式错误的 XML 注释 -->
        <member name="P:Kingdee.BOS.BusinessEntity.BillTrack.ViewLinkDataParameter.LookUpType">
            <summary>
            联查方向，必选
            </summary>
        </member>
        <member name="T:Kingdee.BOS.BusinessEntity.BillTrack.ViewLinkDataParameter.Enum_LookUpType">
            <summary>
            数据联查方向：上查、下查
            </summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.BillTrack.ViewLinkDataParameter.Enum_LookUpType.Down">
            <summary>
            下查
            </summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.BillTrack.ViewLinkDataParameter.Enum_LookUpType.Up">
            <summary>
            上查
            </summary>
        </member>
        <member name="T:Kingdee.BOS.BusinessEntity.BillType.BillType">
            <summary>
            单据类型对象类
            </summary>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BillType.BillType.op_Implicit(Kingdee.BOS.Orm.DataEntity.DynamicObject)~Kingdee.BOS.BusinessEntity.BillType.BillType">
            <summary>支持从DynamicObject隐式转化到BillType类型</summary>
            <param name="obj">要隐式转换的动态实体</param>
            <returns>新构建的BillType对象</returns>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BillType.BillType.#ctor(Kingdee.BOS.Orm.DataEntity.DynamicObject)">
            <summary>创建 BillType 实例</summary>
            <param name="obj">视图访问类实际操作的动态实体，不能为null</param>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BillType.BillType.GetFieldControlByKey(System.String)">
            <summary>
            根据分录ID获取指定行
            </summary>
            <param name="entryID"></param>
            <returns></returns>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BillType.BillType.AddFieldControlEntry(Kingdee.BOS.BusinessEntity.BillType.BillTypeFieldControl)">
            <summary>
            添加新的分录
            </summary>
            <param name="fieldControl"></param>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BillType.BillType.ClearFieldControlEntry">
            <summary>
            清空字段控制分录
            </summary>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BillType.BillType.RemoveFieldControlEntry(System.Int32)">
            <summary>
            移除指定行的字段控制分录
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BillType.BillType.Copy">
            <summary>
            复制单据类型
            </summary>
            <returns></returns>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BillType.BillType.FieldControlEntries">
            <summary>
            获取字段控制分录
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BillType.BillType.Id">
            <summary>
            唯一标识
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BillType.BillType.Number">
            <summary>
            编码
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BillType.BillType.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BillType.BillType.Description">
            <summary>
            描述
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BillType.BillType.BillFormID">
            <summary>
            单据
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BillType.BillType.IsDefault">
            <summary>
            是否默认
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BillType.BillType.IsSysPreSet">
            <summary>
            是否默认
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BillType.BillType.BillCodeRuleID">
            <summary>
            单据编码规则
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BillType.BillType.ControlPrintCount">
            <summary>
            控制打印次数
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BillType.BillType.MaxPrintCount">
            <summary>
            最大打印次数
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BillType.BillType.PrintAfterAudit">
            <summary>
            审核后才允许打印
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BillType.BillType.CreateDate">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BillType.BillType.ModifyDate">
            <summary>
            修改时间
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BillType.BillType.CreatorID">
            <summary>
            创建人
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BillType.BillType.ModifierID">
            <summary>
            修改人
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BillType.BillType.DocumentStatus">
            <summary>
            数据状态
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BillType.BillType.ForbidStatus">
            <summary>
            禁用状态
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BillType.BillType.AuditDate">
            <summary>
            审核时间
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BillType.BillType.ForbidDate">
            <summary>
            禁用时间
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BillType.BillType.AuditorID">
            <summary>
            审核人
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BillType.BillType.ForbidderID">
            <summary>
            禁用人
            </summary>
        </member>
        <member name="T:Kingdee.BOS.BusinessEntity.BillType.BillTypeFieldControl">
            <summary>
            单据类型字段控制分录类
            </summary>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BillType.BillTypeFieldControl.op_Implicit(Kingdee.BOS.Orm.DataEntity.DynamicObject)~Kingdee.BOS.BusinessEntity.BillType.BillTypeFieldControl">
            <summary>支持从DynamicObject隐式转化到BillTypeFieldControl类型</summary>
            <param name="obj">要隐式转换的动态实体</param>
            <returns>新构建的BillTypeFieldControl对象</returns>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BillType.BillTypeFieldControl.#ctor(Kingdee.BOS.Orm.DataEntity.DynamicObject)">
            <summary>创建 BillTypeFieldControl 实例</summary>
            <param name="obj">视图访问类实际操作的动态实体，不能为null</param>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BillType.BillTypeFieldControl.EntryID">
            <summary>
            项目分录内码
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BillType.BillTypeFieldControl.Seq">
            <summary>
            项目分录序号
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BillType.BillTypeFieldControl.FieldKey">
            <summary>
            字段Key
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BillType.BillTypeFieldControl.FieldName">
            <summary>
            字段名称
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BillType.BillTypeFieldControl.MustInput">
            <summary>
            必录
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BillType.BillTypeFieldControl.SysMustInput">
            <summary>
            系统预定义必录
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BillType.BillTypeFieldControl.DefaultValue">
            <summary>
            默认值
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BillType.BillTypeFieldControl.DefaultFuncName">
            <summary>
            默认值函数名称
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BillType.BillTypeFieldControl.DefaultValueType">
            <summary>
            默认值类型
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BillType.BillTypeFieldControl.DefaultFuncID">
            <summary>
            默认值函数ID
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BillType.BillTypeFieldControl.DefaultFuncParam">
            <summary>
            默认值函数参数
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BillType.BillTypeFieldControl.FieldElementType">
            <summary>
            字段类型
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BillType.BillTypeFieldControl.Enabled">
            <summary>
            字段锁定
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BillType.BillTypeFieldControl.EditEnabled">
            <summary>
            字段锁定
            </summary>
        </member>
        <member name="T:Kingdee.BOS.BusinessEntity.BillType.SimpleBillType">
            <summary>
            单据类型对象类
            </summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.BillType.SimpleBillType.BillTypeType">
            <summary>KDUser的动态类型</summary>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BillType.SimpleBillType.op_Implicit(Kingdee.BOS.Orm.DataEntity.DynamicObject)~Kingdee.BOS.BusinessEntity.BillType.SimpleBillType">
            <summary>支持从DynamicObject隐式转化到SimpleBillType类型</summary>
            <param name="obj">要隐式转换的动态实体</param>
            <returns>新构建的SimpleBillType对象</returns>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BillType.SimpleBillType.#ctor(Kingdee.BOS.Orm.DataEntity.DynamicObject)">
            <summary>创建 SimpleBillType 实例</summary>
            <param name="obj">视图访问类实际操作的动态实体，不能为null</param>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.BillType.SimpleBillType.IdProperty">
            <summary>Id的属性描述符</summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.BillType.SimpleBillType.NumberProperty">
            <summary>Id的属性描述符</summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.BillType.SimpleBillType.IsDefaultProperty">
            <summary>Id的属性描述符</summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.BillType.SimpleBillType.BillTypeParaProperty">
            <summary>FName的属性描述符</summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BillType.SimpleBillType.Id">
            <summary>
            唯一标识
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BillType.SimpleBillType.Number">
            <summary>
            编码
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BillType.SimpleBillType.IsDefault">
            <summary>
            是否默认
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BillType.SimpleBillType.BillTypePara">
            <summary>
            单据类型参数
            </summary>
        </member>
        <member name="T:Kingdee.BOS.BusinessEntity.BusinessFlow.AED`1">
            <summary>
            用来存储 Add Edit Delete 的列表结构
            </summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.BusinessFlow.AED`1.AddList">
            <summary>
            待增加的列表
            </summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.BusinessFlow.AED`1.EditList">
            <summary>
            待修改的列表；值对中第一个参数是当前表单，后一个为快照结果（历史）
            </summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.BusinessFlow.AED`1.DeleteList">
            <summary>
            待删除的列表
            </summary>
        </member>
        <member name="T:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowInstance">
            <summary>
            业务流程实例的强命名对象
            </summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowInstance.StatusValue_Normal">
            <summary>
            状态值:正常
            </summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowInstance.StatusValue_Finish">
            <summary>
            状态值:结束
            </summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowInstance.StatusValue_ChangeVersion">
            <summary>
            状态值:切换版本
            </summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowInstance._dt">
            <summary>
            采用的实体模型
            </summary>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowInstance.#ctor(Kingdee.BOS.Orm.DataEntity.DynamicObject)">
            <summary>
            构造函数
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowInstance.SerarchTargetFormNodes(System.String)">
            <summary>
            在流程实例全部节点中，查找目标单据节点，全部返回
            </summary>
            <param name="targetTableName"></param>
            <returns></returns>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowInstance.SearchLastCIds">
            <summary>
            获取业务流程实例中的全部终端节点
            </summary>
            <returns></returns>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowInstance.SearchSourceNodes(Kingdee.BOS.BusinessEntity.BusinessFlow.Id,System.String)">
            <summary>
            在本流程实例中寻找目标单据的全部特定单据类型源单
            </summary>
            <param name="targetId">目标单据标示</param>
            <param name="sourceTableName">表格编码，代表了特定的单据类型</param>
            <returns></returns>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowInstance.SearchSourceNodes(Kingdee.BOS.BusinessEntity.BusinessFlow.Id,System.String,System.Collections.Generic.List{Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowInstance})">
            <summary>
            在本流程实例及本流程实例的父实例中，寻找指定单据类型的上游单据
            </summary>
            <param name="targetId"></param>
            <param name="sourceTableName"></param>
            <param name="sourceInstances"></param>
            <returns></returns>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowInstance.ExistNode(Kingdee.BOS.BusinessEntity.BusinessFlow.Id)">
            <summary>
            本实例中是否包含了指定的节点
            </summary>
            <param name="targetId"></param>
            <returns></returns>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowInstance.ParseNodes">
            <summary>
            刷新路线推进节点数据树
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowInstance.Id">
            <summary>
            主键
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowInstance.FlowId">
            <summary>
            实例采用的流程图
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowInstance.SourceId">
            <summary>
            来源实例内码
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowInstance.MasterId">
            <summary>
            全程实例内码
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowInstance.Status">
            <summary>
            实例状态
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowInstance.FirstFormId">
            <summary>
            发起单据类型
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowInstance.FirstBillId">
            <summary>
            发起单据内码
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowInstance.FirstBillNo">
            <summary>
            发起单据编码
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowInstance.StartTime">
            <summary>
            实例创建时间
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowInstance.Entity">
            <summary>
            单据体
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowInstance.FirstNode">
            <summary>
            实例的推进路线开始节点；由此节点不断推进，形成一个节点树
            </summary>
        </member>
        <member name="T:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowInstanceEntity">
            <summary>
            业务流程行数据
            </summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowInstanceEntity._dt">
            <summary>
            采用的实体模型
            </summary>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowInstanceEntity.#ctor(Kingdee.BOS.Orm.DataEntity.DynamicObject)">
            <summary>
            构造函数
            </summary>
            <param name="obj"></param>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowInstanceEntity.Id">
            <summary>
            主键
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowInstanceEntity.LineId">
            <summary>
            流程图路线
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowInstanceEntity.SourceTableName">
            <summary>
            来源单据表格Name
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowInstanceEntity.SourceId">
            <summary>
            来源单据内码
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowInstanceEntity.SourceCId">
            <summary>
            拼接的源单CId
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowInstanceEntity.TargetTableName">
            <summary>
            目标单据表格Id
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowInstanceEntity.TargetId">
            <summary>
            目标单据内码
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowInstanceEntity.TargetCId">
            <summary>
            拼接的目标单据Cid
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowInstanceEntity.FirstNode">
            <summary>
            首节点
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowInstanceEntity.CreateTime">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowInstanceEntity.AmountEntity">
            <summary>
            携带值
            </summary>
        </member>
        <member name="T:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowInstanceAmount">
            <summary>
            业务流程行携带数值
            </summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowInstanceAmount._dt">
            <summary>
            采用的实体模型
            </summary>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowInstanceAmount.#ctor(Kingdee.BOS.Orm.DataEntity.DynamicObject)">
            <summary>
            构造函数
            </summary>
            <param name="obj"></param>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowInstanceAmount.Id">
            <summary>
            主键
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowInstanceAmount.SourceField">
            <summary>
            源单字段
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowInstanceAmount.TargetField">
            <summary>
            目标单字段
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowInstanceAmount.Amount">
            <summary>
            携带数值
            </summary>
        </member>
        <member name="T:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowInstanceCollection">
            <summary>
            业务流程实例强命名数据对象集合
            </summary>
        </member>
        <member name="T:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowInstanceType">
            <summary>
            实体模型：业务流程实例主表；记录实例详细信息，包括实例来源，实例的全部推进路线等
            </summary>
            <remarks>
            主表: t_BF_Instance
            字段：
                a. FInstanceID      内码，记录当前流程实例内码
                b. FSourceId        源流程实例内码
                c. FMasterId        业务流程实例全程跟踪内码，等于发起流程实例内码，一直往后携带
                d. FStatus          流程实例状态, A = 进行中，B = 完成，... C = 待扩展
            </remarks>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowInstanceType.DEFAULTENTITYNAME">
            <summary>
            实体名称
            </summary>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowInstanceType.#ctor(System.String,System.String,System.String)">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowInstanceType.CreateProperties">
            <summary>
            创建属性
            </summary>
            <param name="entityTableName"></param>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowInstanceType.OnDeserialization(System.Object)">
            <summary>
            反序列化时，给本地属性对象赋值
            </summary>
            <param name="sender"></param>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowInstanceType.IdProperty">
            <summary>
            主键
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowInstanceType.FlowIdProperty">
            <summary>
            流程实例对应的业务流程图版本标示
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowInstanceType.SourceIdProperty">
            <summary>
            来源实例内码
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowInstanceType.MasterIdProperty">
            <summary>
            全程实例内码
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowInstanceType.StatusProperty">
            <summary>
            实例状态
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowInstanceType.FirstFormIdProperty">
            <summary>
            发起单据类型
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowInstanceType.FirstBillIdProperty">
            <summary>
            发起单据内码
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowInstanceType.FirstBillNoProperty">
            <summary>
            发起单据编码
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowInstanceType.StartTimeProperty">
            <summary>
            首发时间
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowInstanceType.EntityType">
            <summary>
            分录采用的实体模型
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowInstanceType.EntityProperty">
            <summary>
            分录在本实体模型上的引用
            </summary>
        </member>
        <member name="T:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowInstanceEntityType">
            <summary>
            实体模型：业务流程实例从表；记录实例的实际推进路线；
            不同的流程图可能采用不同的从表，以缓解数据压力；
            </summary>
            <remarks>
            从表: t_BF_InstanceEntry (自由流程采用的从表）
            字段：
                a. FRouteId         路线内码
                b. FInstanceID      实例内码，记录当前流程实例内码（外键，无须创建属性）
                c. FSTableId        源表Id
                d. FSId             源单行Id
                e. FSCId            源单CId
                f. FTTableId        目标表Id
                g. FTId             目标单Id
                h. FTCId            目标单CId
            </remarks>     
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowInstanceEntityType.DEFAULTENTITYNAME">
            <summary>
            实体名称
            </summary>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowInstanceEntityType.#ctor(System.String,System.String)">
            <summary>
            构造函数，采用传入的物理表格名称
            </summary>
            <param name="tableName"></param>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowInstanceEntityType.CreateProperties">
            <summary>
            创建属性
            </summary>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowInstanceEntityType.OnDeserialization(System.Object)">
            <summary>
            反序列化时，给本地属性对象赋值
            </summary>
            <param name="sender"></param>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowInstanceEntityType.IdProperty">
            <summary>
            主键
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowInstanceEntityType.LineIdProperty">
            <summary>
            引用的流程实例主键
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowInstanceEntityType.SourceTableNameProperty">
            <summary>
            来源单据表格Name
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowInstanceEntityType.SourceIdProperty">
            <summary>
            来源单据内码
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowInstanceEntityType.TargetTableNameProperty">
            <summary>
            目标单据表格Name
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowInstanceEntityType.TargetIdProperty">
            <summary>
            目标单据内码
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowInstanceEntityType.FirstNodeProperty">
            <summary>
            流程实例首节点标志
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowInstanceEntityType.CreateTimeProperty">
            <summary>
            流程路线发生时间
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowInstanceEntityType.AmountEntityType">
            <summary>
            控制字段携带值所采用的实体模型
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowInstanceEntityType.AmountEntityProperty">
            <summary>
            携带值实体模型的引用
            </summary>
        </member>
        <member name="T:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowInstanceAmountType">
            <summary>
            实体模型：业务流程实例携带数值；记录推进路线携带的各控制字段值；
            </summary>
            <remarks>
            携带数值表: t_BF_InstanceAmount 
            字段：
                a. FDetailId        数据内码
                b. FRouteId         路线内码
                c. FFieldKey        控制字段
                d. FAmount          控制字段携带值
            </remarks>     
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowInstanceAmountType.DEFAULTENTITYNAME">
            <summary>
            实体名称
            </summary>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowInstanceAmountType.#ctor(System.String)">
            <summary>
            构造函数，采用传入的物理表格名称
            </summary>
            <param name="tableName"></param>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowInstanceAmountType.CreateProperties">
            <summary>
            创建属性
            </summary>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowInstanceAmountType.OnDeserialization(System.Object)">
            <summary>
            反序列化时，给本地属性对象赋值
            </summary>
            <param name="sender"></param>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowInstanceAmountType.IdProperty">
            <summary>
            主键
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowInstanceAmountType.SourceFieldProperty">
            <summary>
            源单字段
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowInstanceAmountType.TargetFieldProperty">
            <summary>
            目标单字段
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowInstanceAmountType.AmountProperty">
            <summary>
            携带数值
            </summary>
        </member>
        <member name="T:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowTracker">
            <summary>
            业务流程实例的单条推进路线强命名对象；记录了单次下推成功后的源单与目标单信息
            </summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowTracker._dt">
            <summary>
            采用的实体模型
            </summary>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowTracker.#ctor(Kingdee.BOS.Orm.DataEntity.DynamicObject)">
            <summary>
            构造函数
            </summary>
            <param name="obj"></param>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowTracker.Id">
            <summary>
            主键
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowTracker.InstanceId">
            <summary>
            引用的流程实例主键
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowTracker.Instance">
            <summary>
            引用的流程实例详情
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowTracker.LineId">
            <summary>
            流程图路线
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowTracker.SourceTableName">
            <summary>
            来源单据表格Name
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowTracker.SourceId">
            <summary>
            来源单据内码
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowTracker.SourceCId">
            <summary>
            拼接的源单CId
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowTracker.TargetTableName">
            <summary>
            目标单据表格Name
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowTracker.TargetId">
            <summary>
            目标单据内码
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowTracker.TargetCId">
            <summary>
            拼接的目标单据Cid
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowTracker.FirstNode">
            <summary>
            首节点
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowTracker.CreateTime">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowTracker.AmountEntity">
            <summary>
            携带值
            </summary>
        </member>
        <member name="T:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowTrackerRefInstance">
            <summary>
            路线上引用的流程实例主体信息；不嵌套引用实例的全部推进路线
            </summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowTrackerRefInstance._dt">
            <summary>
            采用的实体模型
            </summary>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowTrackerRefInstance.#ctor(Kingdee.BOS.Orm.DataEntity.DynamicObject)">
            <summary>
            构造函数
            </summary>
            <param name="obj"></param>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowTrackerRefInstance.Id">
            <summary>
            主键
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowTrackerRefInstance.FlowId">
            <summary>
            实例采用的流程图
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowTrackerRefInstance.SourceId">
            <summary>
            来源实例内码
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowTrackerRefInstance.MasterId">
            <summary>
            全程实例内码
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowTrackerRefInstance.Status">
            <summary>
            实例状态
            </summary>
        </member>
        <member name="T:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowTrackerAmount">
            <summary>
            业务流程行携带数值
            </summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowTrackerAmount._dt">
            <summary>
            采用的实体模型
            </summary>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowTrackerAmount.#ctor(Kingdee.BOS.Orm.DataEntity.DynamicObject)">
            <summary>
            构造函数
            </summary>
            <param name="obj"></param>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowTrackerAmount.Id">
            <summary>
            主键
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowTrackerAmount.SourceField">
            <summary>
            源单字段
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowTrackerAmount.TargetField">
            <summary>
            目标单字段
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowTrackerAmount.Amount">
            <summary>
            携带数值
            </summary>
        </member>
        <member name="T:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowTrackerCollection">
            <summary>
            业务流程实例的推进路线强命名数据对象集合
            </summary>
        </member>
        <member name="T:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowTrackerType">
            <summary>
            实体模型：业务流程实例推进路线；
            记录实例的一条推进路线信息，并通过引用的方式关联实例的详情；
            不同的流程图可能采用不同的物料表格记录推进路线，以缓解数据压力
            </summary>
            <remarks>
            推进路线表格：t_BF_InstanceEntry (自由流程采用的路线表格）
            字段：
                a. FRouteId         路线内码
                b. FInstanceID      实例内码，记录当前流程实例内码（外键，无须创建属性）
                c. FSTableId        源表Id
                d. FSId             源单行Id
                e. FSCId            源单CId
                f. FTTableId        目标表Id
                g. FTId             目标单Id
                h. FTCId            目标单CId
            </remarks>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowTrackerType.DEFAULTENTITYNAME">
            <summary>
            实体名称
            </summary>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowTrackerType.#ctor(System.String,System.String,System.String)">
            <summary>
            构造函数，采用传入的物理表格名称；不同的流程图可采用各自路线表格
            </summary>
            <param name="tableName"></param>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowTrackerType.CreateProperties">
            <summary>
            创建属性
            </summary>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowTrackerType.OnDeserialization(System.Object)">
            <summary>
            反序列化时，给本地属性对象赋值
            </summary>
            <param name="sender"></param>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowTrackerType.IdProperty">
            <summary>
            主键
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowTrackerType.InstanceIdProperty">
            <summary>
            引用的流程实例主键
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowTrackerType.InstanceProperty">
            <summary>
            引用的流程实例详情
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowTrackerType.LineIdProperty">
            <summary>
            引用的流程实例主键
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowTrackerType.SourceTableNameProperty">
            <summary>
            来源单据表格Id
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowTrackerType.SourceIdProperty">
            <summary>
            来源单据内码
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowTrackerType.TargetTableNameProperty">
            <summary>
            目标单据表格Id
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowTrackerType.TargetIdProperty">
            <summary>
            目标单据内码
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowTrackerType.FirstNodeProperty">
            <summary>
            流程实例首节点标志
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowTrackerType.CreateTimeProperty">
            <summary>
            流程路线发生时间
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowTrackerType.AmountEntityType">
            <summary>
            控制字段携带值所采用的实体模型
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowTrackerType.AmountEntityProperty">
            <summary>
            携带值实体模型的引用
            </summary>
        </member>
        <member name="T:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowTrackerRefInstanceType">
            <summary>
            实体模型：业务流程实例描述
            推进路线引用本属性，描述路线所在的实例状况
            </summary>
            <remarks>
            业务流程实例表: t_BF_Instance
            字段：
                a. FInstanceID      内码，记录当前流程实例内码
                b. FSourceId        源流程实例内码
                c. FMasterId        业务流程实例全程跟踪内码，等于发起流程实例内码，一直往后携带
                d. FStatus          流程实例状态, A = 进行中，B = 完成，... C = 待扩展
            </remarks>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowTrackerRefInstanceType.DEFAULTENTITYNAME">
            <summary>
            实体名称
            </summary>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowTrackerRefInstanceType.#ctor(System.String)">
            <summary>
            构造函数，采用统一的流程实例主从表
            </summary>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowTrackerRefInstanceType.CreateProperties">
            <summary>
            创建属性
            </summary>
            <param name="entityTableName"></param>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowTrackerRefInstanceType.OnDeserialization(System.Object)">
            <summary>
            反序列化时，给本地属性对象赋值
            </summary>
            <param name="sender"></param>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowTrackerRefInstanceType.IdProperty">
            <summary>
            主键
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowTrackerRefInstanceType.FlowIdProperty">
            <summary>
            业务流程实例对应的业务流程图
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowTrackerRefInstanceType.SourceIdProperty">
            <summary>
            来源实例内码
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowTrackerRefInstanceType.MasterIdProperty">
            <summary>
            全程实例内码
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowTrackerRefInstanceType.StatusProperty">
            <summary>
            实例状态
            </summary>
        </member>
        <member name="T:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowTrackerAmountType">
            <summary>
            实体模型：业务流程实例携带数值；记录推进路线携带的各控制字段值；
            </summary>
            <remarks>
            携带数值表: t_BF_InstanceAmount 
            字段：
                a. FDetailId        数据内码
                b. FRouteId         路线内码
                c. FFieldKey        控制字段
                d. FAmount          控制字段携带值
            </remarks>     
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowTrackerAmountType.DEFAULTENTITYNAME">
            <summary>
            实体名称
            </summary>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowTrackerAmountType.#ctor(System.String)">
            <summary>
            构造函数，采用传入的物理表格名称
            </summary>
            <param name="tableName"></param>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowTrackerAmountType.CreateProperties">
            <summary>
            创建属性
            </summary>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowTrackerAmountType.OnDeserialization(System.Object)">
            <summary>
            反序列化时，给本地属性对象赋值
            </summary>
            <param name="sender"></param>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowTrackerAmountType.IdProperty">
            <summary>
            主键
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowTrackerAmountType.SourceFieldProperty">
            <summary>
            源单字段
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowTrackerAmountType.TargetFieldProperty">
            <summary>
            目标单字段
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowTrackerAmountType.AmountProperty">
            <summary>
            携带数值
            </summary>
        </member>
        <member name="T:Kingdee.BOS.BusinessEntity.BusinessFlow.IDbIdentifier`1">
            <summary>
            记录某个数据库记录的指针。
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.IDbIdentifier`1.Tbl">
            <summary>
            表格编码：TableNumber, 缩写以减少xml大小；
            表格编码用于反查其对应的单据、实体；
            </summary>
            <remarks>
            默认为实体的物理表名，在有多个实体采用同一表格时，自动增加后缀区分
            </remarks>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.IDbIdentifier`1.EId">
            <summary>
            数据：EntryId
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.IDbIdentifier`1.CId">
            <summary>
            组合："TableNumber,EntryId"
            </summary>
        </member>
        <member name="T:Kingdee.BOS.BusinessEntity.BusinessFlow.Id">
            <summary>
            默认的数据行标示对象，包含了TableNumber, Id: DefaultIDbIdentifier, 缩写以减少空间
            </summary>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BusinessFlow.Id.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BusinessFlow.Id.#ctor(System.String,System.Int64)">
            <summary>
            根据表格编码，实体数据内码构建本对象
            </summary>
            <param name="tableNumber"></param>
            <param name="id"></param>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.Id.Tbl">
            <summary>
            表格编码；默认为实体物理表格名
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.Id.EId">
            <summary>
            实体数据内码
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.Id.CId">
            <summary>
            组合
            </summary>
        </member>
        <member name="T:Kingdee.BOS.BusinessEntity.BusinessFlow.MessageEntity">
            <summary>
            消息强命名对象；
            </summary>
            <remarks>
            发送消息时，实例化本对象，并设置好各属性值，直接存储到数据库即可
            </remarks>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.BusinessFlow.MessageEntity.MessageEntityType">
            <summary>
            工作流消息动态实体类型
            </summary>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BusinessFlow.MessageEntity.#ctor(Kingdee.BOS.Orm.DataEntity.DynamicObject)">
            <summary>
            构造函数
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BusinessFlow.MessageEntity.op_Implicit(Kingdee.BOS.Orm.DataEntity.DynamicObject)~Kingdee.BOS.BusinessEntity.BusinessFlow.MessageEntity">
            <summary>支持从DynamicObject隐式转化到WorkflowModelVersion类型</summary>
            <param name="obj">要隐式转换的动态实体</param>
            <returns>新构建的WorkflowModelVersion对象</returns>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.BusinessFlow.MessageEntity.MessageIdProperty">
            <summary>
            消息Id属性描述
            </summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.BusinessFlow.MessageEntity.SenderIdProperty">
            <summary>
            发送人属性描述
            </summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.BusinessFlow.MessageEntity.ReceiverIdProperty">
            <summary>
            接收人属性描述
            </summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.BusinessFlow.MessageEntity.TitleProperty">
            <summary>
            标题属性描述
            </summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.BusinessFlow.MessageEntity.ContentProperty">
            <summary>
            内容属性描述
            </summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.BusinessFlow.MessageEntity.CreateTimeProperty">
            <summary>
            创建时间描述
            </summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.BusinessFlow.MessageEntity.CompleteTimeProperty">
            <summary>
            处理时间描述
            </summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.BusinessFlow.MessageEntity.StatusProperty">
            <summary>
            已读状态描述
            </summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.BusinessFlow.MessageEntity.MsgTypeProperty">
            <summary>
            消息类别描述
            </summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.BusinessFlow.MessageEntity.ObjectTypeIdProperty">
            <summary>
            业务对象
            </summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.BusinessFlow.MessageEntity.KeyValueProperty">
            <summary>
            数据主键
            </summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.BusinessFlow.MessageEntity.SendMessageIdProperty">
            <summary>
            发件内码 属性描述
            </summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.BusinessFlow.MessageEntity.ReceiversDispProperty">
            <summary>
            收件人(显示用) 属性描述
            </summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.BusinessFlow.MessageEntity.AttachDataProperty">
            <summary>
            附加数据 属性描述
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.MessageEntity.MessageId">
            <summary>
            消息Id
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.MessageEntity.SenderId">
            <summary>
            发送人Id
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.MessageEntity.ReceiverId">
            <summary>
            接收人Id
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.MessageEntity.Title">
            <summary>
            标题
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.MessageEntity.Content">
            <summary>
            内容
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.MessageEntity.CreateTime">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.MessageEntity.CompletedTime">
            <summary>
            处理时间
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.MessageEntity.Status">
            <summary>
            阅读状态
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.MessageEntity.MsgType">
            <summary>
            消息类别
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.MessageEntity.ObjectTypeId">
            <summary>
            业务对象Id
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.MessageEntity.KeyValue">
            <summary>
            业务数据主键值
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.MessageEntity.SendMsgId">
            <summary>
            发件内码
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.MessageEntity.ReceiversDisp">
            <summary>
            收件人(显示用)
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.MessageEntity.AttachData">
            <summary>
            附加数据
            </summary>
        </member>
        <member name="T:Kingdee.BOS.BusinessEntity.BusinessFlow.MessageType">
            <summary>
            消息类型
            </summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.BusinessFlow.MessageType.WorkflowMessage">
            <summary>
            工作流消息
            </summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.BusinessFlow.MessageType.CommonMessage">
            <summary>
            普通消息
            </summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.BusinessFlow.MessageType.BusinessFlowMessage">
            <summary>
            业务流程普通消息
            </summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.BusinessFlow.MessageType.BusinessAlarmMessage">
            <summary>
            业务预警消息
            </summary>
        </member>
        <member name="T:Kingdee.BOS.BusinessEntity.BusinessFlow.ReadStatus">
            <summary>
            阅读状态
            </summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.BusinessFlow.ReadStatus.Unread">
            <summary>
            未读
            </summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.BusinessFlow.ReadStatus.Readed">
            <summary>
            已读
            </summary>
        </member>
        <member name="T:Kingdee.BOS.BusinessEntity.BusinessFlow.MyFavBFlowEntity">
            <summary>
            我的收藏
            </summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.BusinessFlow.MyFavBFlowEntity.MyFavBFlowEntityType">
            <summary>
            工作流消息动态实体类型
            </summary>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BusinessFlow.MyFavBFlowEntity.#ctor(Kingdee.BOS.Orm.DataEntity.DynamicObject)">
            <summary>
            构造函数
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BusinessFlow.MyFavBFlowEntity.op_Implicit(Kingdee.BOS.Orm.DataEntity.DynamicObject)~Kingdee.BOS.BusinessEntity.BusinessFlow.MyFavBFlowEntity">
            <summary>支持从DynamicObject隐式转化到WorkflowModelVersion类型</summary>
            <param name="obj">要隐式转换的动态实体</param>
            <returns>新构建的WorkflowModelVersion对象</returns>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.BusinessFlow.MyFavBFlowEntity.IdProperty">
            <summary>
            Id属性描述
            </summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.BusinessFlow.MyFavBFlowEntity.PublishEntryIdProperty">
            <summary>
            业务流程配置内码
            </summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.BusinessFlow.MyFavBFlowEntity.UserIdProperty">
            <summary>
            用户
            </summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.BusinessFlow.MyFavBFlowEntity.OrgIdProperty">
            <summary>
            组织
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.MyFavBFlowEntity.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.MyFavBFlowEntity.PublishEntryId">
            <summary>
            业务流程配置Id
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.MyFavBFlowEntity.UserId">
            <summary>
            用户Id
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.MyFavBFlowEntity.OrgId">
            <summary>
            组织Id
            </summary>
        </member>
        <member name="T:Kingdee.BOS.BusinessEntity.BusinessFlow.RouteTreeNode">
            <summary>
            正向路线树，用于跟踪去向：从首节点开始，逐层分叉记录其子节点，形成一颗正向树
            </summary>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BusinessFlow.RouteTreeNode.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BusinessFlow.RouteTreeNode.RefreshChildNodes(Kingdee.BOS.Orm.DataEntity.DynamicObjectCollection)">
            <summary>
            递归刷新本节点的下游节点
            </summary>
            <param name="routeRows">流程实例的全部路线</param>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BusinessFlow.RouteTreeNode.RefreshChildNodes(System.Collections.Generic.List{Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowInstanceEntity}@)">
            <summary>
            递归刷新本节点的下游节点
            </summary>
            <param name="routeRows">流程实例待匹配的路线。每次匹配完成后，会从集合中删除已经匹配上的路线，减少递归时循环次数</param>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BusinessFlow.RouteTreeNode.ExistNode(Kingdee.BOS.BusinessEntity.BusinessFlow.Id)">
            <summary>
            本节点的子集中，是否存在了指定节点？
            </summary>
            <param name="targetId"></param>
            <returns></returns>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BusinessFlow.RouteTreeNode.SerarchTargetFormNodes(System.String,System.Collections.Generic.List{Kingdee.BOS.BusinessEntity.BusinessFlow.RouteTreeNode}@)">
            <summary>
            在本节点及子集中，查找全部目标单据节点
            </summary>
            <param name="targetTableName"></param>
            <returns></returns>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BusinessFlow.RouteTreeNode.SearchLastNodes(System.Collections.Generic.List{Kingdee.BOS.BusinessEntity.BusinessFlow.RouteTreeNode}@)">
            <summary>
            寻找终端节点列表；从首节点开始找，能够找到全部的终端节点
            </summary>
            <param name="lastNodes"></param>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BusinessFlow.RouteTreeNode.SearchChildNodes(Kingdee.BOS.BusinessEntity.BusinessFlow.Id,System.Collections.Generic.List{Kingdee.BOS.BusinessEntity.BusinessFlow.RouteTreeNode}@)">
            <summary>
            在本节点及子节点中，寻找指定的节点集合;
            含本节点;
            如果本节点即时目标节点，直接返回，否则遍历其下游
            </summary>
            <param name="targetId"></param>
            <param name="childNodes"></param>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BusinessFlow.RouteTreeNode.InitSAmounts(Kingdee.BOS.BusinessEntity.BusinessFlow.BusinessFlowInstanceEntity)">
            <summary>
            初始化控制字段携带值集合
            </summary>
            <param name="entityRow"></param>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.RouteTreeNode.Id">
            <summary>
            本节点对应的数据行
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.RouteTreeNode.SAmounts">
            <summary>
            本数据行从上游单据携带过来控制字段值
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.RouteTreeNode.ParentNode">
            <summary>
            直接来源节点；正向树上，每节点只有唯一上级；
            </summary>
            <remarks>
            如果某单据是合并下推的，在节点树中，将以多个节点存在
            </remarks>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.RouteTreeNode.ChildNodes">
            <summary>
            下游节点
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.RouteTreeNode.AllChildNodes">
            <summary>
            全部下游节点，包括直接下游节点与间接下游节点
            </summary>
        </member>
        <member name="T:Kingdee.BOS.BusinessEntity.BusinessFlow.Row`1">
            <summary>
            实体行关联关系数据包
            </summary>
            <remarks>
            原名 ArticulationRow, 为减少序列化存储空间，而进行缩写
            </remarks>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BusinessFlow.Row`1.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.BusinessFlow.Row`1._writeBackRowCollection">
            <summary>
            本实体行的反写条目集合
            </summary>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BusinessFlow.Row`1.Clone">
            <summary>
            复制对象
            </summary>
            <returns></returns>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BusinessFlow.Row`1.EqualsWithOutWriteBackRule``1(Kingdee.BOS.BusinessEntity.BusinessFlow.Row{``0},Kingdee.BOS.BusinessEntity.BusinessFlow.Row{``0})">
            <summary>
            判断两个勾稽行是否是描述同一个勾稽内容;除反写要求外
            </summary>
            <returns>
            如果x和y的Id相同，且采用的流程图、来源同，则返回true
            不比较反写要求，只需判断采用的相同的路线，不需要重复记录业务流程跟踪信息即可
            此函数为存储业务流程跟踪信息前，比较原跟踪记录与现有记录而设立。参见跟踪信息存储引擎在快照比较。
            </returns>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.Row`1.Id">
            <summary>
            本行的标示对象
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.Row`1.SId">
            <summary>
            直接源单标示对象
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.Row`1.FId">
            <summary>
            源单到本单采用的业务流程图；空为自由流程: FlowId
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.Row`1.LId">
            <summary>
            源单到本单采用的路线；0为自由流程: FlowLineId
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.Row`1.DataEntity">
            <summary>
            对应的目标单据行数据包，需要附加，主要是后期需要进行条件计算、反写计算等
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.Row`1.DataLinkEntity">
            <summary>
            对应的目标单据行中，关联关系子单据体数据包
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.Row`1.SourceInstanceMasters">
            <summary>
            直接源单所在的业务流程实例主标示；
            直接源单可能是合并后的数据，来源于多条业务流程实例
            </summary>
            <remarks>
            本属性，是临时冗余的；避免两个集合重复循环查询
            </remarks>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.Row`1.SAmounts">
            <summary>
            本行从源单上携带的可用量条目集合
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.Row`1.WRules">
            <summary>
            本行需要执行的反写规则集合
            </summary>
        </member>
        <member name="T:Kingdee.BOS.BusinessEntity.BusinessFlow.Rows`1">
            <summary>
            实体行集合级数据包，存储实体行的关联关系
            </summary>
            <typeparam name="T"></typeparam>
            <remarks>原名ArticulationRowCollection，为减少序列化空间而缩写</remarks>
        </member>
        <member name="T:Kingdee.BOS.BusinessEntity.BusinessFlow.SAmount">
            <summary>
            关联行从源单携带的可用量
            </summary>
            <remarks>
            ArticulationSourceAmount
            </remarks>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BusinessFlow.SAmount.EqualsWithOutAmount(Kingdee.BOS.BusinessEntity.BusinessFlow.SAmount,Kingdee.BOS.BusinessEntity.BusinessFlow.SAmount)">
            <summary>
            判断两个可用量携带条目是否一致；不包括数值
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.SAmount.SFld">
            <summary>
            上游单据控制字段名: SourceField
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.SAmount.TFld">
            <summary>
            本单控制字段名: TargetField
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.SAmount.Val">
            <summary>
            从源单上携带到本单字段上的可用量数值
            </summary>
        </member>
        <member name="T:Kingdee.BOS.BusinessEntity.BusinessFlow.SAmounts">
            <summary>
            从上游单据携带下来的可用量集合
            </summary>
            <remarks>原名ArticulationSourceAmountCollection</remarks>
        </member>
        <member name="T:Kingdee.BOS.BusinessEntity.BusinessFlow.Sheet`1">
            <summary>
            单据级的数据包，存储实体行关联关系
            </summary>
            <remarks>原名ArticulationSheet</remarks>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BusinessFlow.Sheet`1.EqualsWithId``1(Kingdee.BOS.BusinessEntity.BusinessFlow.Sheet{``0},Kingdee.BOS.BusinessEntity.BusinessFlow.Sheet{``0})">
            <summary>
            判断两个勾稽行是否是描述同一个勾稽内容。
            </summary>
            <returns>如果x和y的Id相同，且所有要勾稽的状态及ID也相同，返回true</returns>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.Sheet`1.Rows">
            <summary>
            所有勾稽请求行。
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.Sheet`1.Id">
            <summary>
            单据的唯一识别编号，格式：FormId,linkEntryKey,FID
            </summary>
            <remarks>
            识别编号中各片断意义：
            1. FormId : 区分不同的单据类别
            2. linkEntryKey : 本次关联数据基于那个实体构建
            3. FID : 区分不同的单据数据
            </remarks>
        </member>
        <member name="T:Kingdee.BOS.BusinessEntity.BusinessFlow.Sheets`1">
            <summary>
            单据集合级的数据包，存储多单据的实体行关联关系
            </summary>
            <typeparam name="T"></typeparam>
            <remarks>原名ArticulationSheetCollection</remarks>
        </member>
        <member name="T:Kingdee.BOS.BusinessEntity.BusinessFlow.TableDefine">
            <summary>
            业务单据实体表格定义；应用于业务流程中，通过表格编码，唯一标示一个单据实体，减少数据冗余
            </summary>
            <remarks>
            单据实体的表格编码默认为物理表格名，重名时增加后缀
            </remarks>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.BusinessFlow.TableDefine._dt">
            <summary>
            采用的实体模型
            </summary>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BusinessFlow.TableDefine.#ctor(Kingdee.BOS.Orm.DataEntity.DynamicObject)">
            <summary>
            构造函数
            </summary>
            <param name="obj"></param>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.TableDefine.TableId">
            <summary>
            主键：GUID
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.TableDefine.TableNumber">
            <summary>
            表格编码: 默认为单据实体的物理表格名称，如有重名，则自动添加后缀
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.TableDefine.FormId">
            <summary>
            单据
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.TableDefine.EntityKey">
            <summary>
            实体
            </summary>
        </member>
        <member name="T:Kingdee.BOS.BusinessEntity.BusinessFlow.TableDefineCollection">
            <summary>
            表格定义对象集合
            </summary>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BusinessFlow.TableDefineCollection.#ctor(System.Collections.Generic.IList{Kingdee.BOS.BusinessEntity.BusinessFlow.TableDefine})">
            <summary>
            构造函数
            </summary>
            <param name="list"></param>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BusinessFlow.TableDefineCollection.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BusinessFlow.TableDefineCollection.TryGetTableDefine(System.String,System.String,Kingdee.BOS.BusinessEntity.BusinessFlow.TableDefine@)">
            <summary>
            根据单据与实体，尝试获取表格定义; 用户根据单据实体，查其对应的表格编码
            </summary>
            <param name="formId"></param>
            <param name="entityKey"></param>
            <param name="tableDefine"></param>
            <returns></returns>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BusinessFlow.TableDefineCollection.TryGetTableDefine(System.String,Kingdee.BOS.BusinessEntity.BusinessFlow.TableDefine@)">
            <summary>
            根据表格编码，寻找表格定义；用于根据编码，反查对应的单据实体
            </summary>
            <param name="tableNumber"></param>
            <param name="tableDefine"></param>
            <returns></returns>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BusinessFlow.TableDefineCollection.AddTableDefine(Kingdee.BOS.BusinessEntity.BusinessFlow.TableDefineType,System.String,System.String,System.String)">
            <summary>
            生成一个表格定义新实例，并添加到集合中
            </summary>
            <param name="dt"></param>
            <param name="formId"></param>
            <param name="entityKey"></param>
            <param name="tableName"></param>
            <returns></returns>
        </member>
        <member name="T:Kingdee.BOS.BusinessEntity.BusinessFlow.TableDefineType">
            <summary>
            单据实体表格定义模型
            </summary>
            <remarks>
            表格: t_BF_TableDefine
            字段：
                FTableId, varchar(36), guid, 数据唯一标示
                FTableNumber, varchar(30), 默认为单据实体的物理表格；当多个单据采用同一表格时，自动添加后缀
                FFormId, varchar(30), 单据
                FEntityKey, varchar(30), 实体
            </remarks>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.BusinessFlow.TableDefineType.DEFAULTENTITYNAME">
            <summary>
            实体名称
            </summary>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BusinessFlow.TableDefineType.#ctor(System.String)">
            <summary>
            构造函数，采用统一的流程实例主从表
            </summary>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BusinessFlow.TableDefineType.CreateProperties">
            <summary>
            创建属性
            </summary>
            <param name="entityTableName"></param>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BusinessFlow.TableDefineType.OnDeserialization(System.Object)">
            <summary>
            反序列化时，给本地属性对象赋值
            </summary>
            <param name="sender"></param>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.TableDefineType.TableIdProperty">
            <summary>
            主键
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.TableDefineType.TableNumberProperty">
            <summary>
            表格编码，默认为物理表名
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.TableDefineType.FormIdProperty">
            <summary>
            单据
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.TableDefineType.EntityKeyProperty">
            <summary>
            实体
            </summary>
        </member>
        <member name="T:Kingdee.BOS.BusinessEntity.BusinessFlow.WriteBackOperationController`1">
            <summary>
            操作对反写条目的执行策略分析类：
            不同的操作，对同一条反写条目的执行策略完全不同，如：
            保存，累加本次计算出来的值；删除，则需扣减历史发生的量
            </summary>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BusinessFlow.WriteBackOperationController`1.CheckCanWriteBack(Kingdee.BOS.BusinessEntity.BusinessFlow.WRule{`0})">
             <summary>
             执行反写条目的执行策略分析，分析结果直接写在条目属性上
             </summary>
             <remarks>
             不同的操作当前数据与历史快照的比较及针对各操作的执行策略
             
             分类                  保存/审核/反作废          反审核               删除/作废
             -------------------   ----------------         --------------      -------------------        
             构建的Sheets          基于数据包                基于数据包           空，无当前目标，操作完毕后，清除一切历史
             读取的快照            all                      all                  all
             
             新ArticulationRow    
                新WriteBackRow     条件+操作 ++             不执行(不存在)        不执行(不存在）
                删WriteBackRow     无条件执行(不存在) --     执行(不存在) --      执行（不存在）--
                改WriteBackRow     条件+操作(不存在) ++      操作(不存在) --      执行（不存在）--
            
             删ArticulationRow
                新WriteBackRow     条件+操作(不存在) ++      不执行(不存在)        不执行（不存在）
                删WriteBackRow     无条件执行 --             执行(不存在) --       执行 --
                改WriteBackRow     条件+操作(不存在) ++      操作(不存在) --        执行（不存在）--
             
             改ArticulationRow     
               新WriteBackRow      条件+操作 ++              不执行                不执行（不存在）
               删WriteBackRow      无条件执行 --             执行 --               执行（不存在）--
               改WriteBackRow      条件+操作 ++              操作 --               执行（不存在）--
               
             新WriteBackRow: 有当前，无历史
             删WriteBackRow: 无当前，有历史
             改WriteBackRow: 有当前，有历史
             </remarks>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BusinessFlow.WriteBackOperationController`1.CalcRealAmount(Kingdee.BOS.BusinessEntity.BusinessFlow.WRule{`0})">
            <summary>
            根据条件，计算反写条目本次实际需要执行的量，反写成功后的总影响量
            </summary>
            <param name="row"></param>
            <remarks>
            条件包括：
            1. 当前操作
            2. 本次是否允许
            3. 当前目标量
            4. 历史已经发生量；
            </remarks>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BusinessFlow.WriteBackOperationController`1.CalcNewWriteBackRowRealAmount(Kingdee.BOS.BusinessEntity.BusinessFlow.WRule{`0})">
            <summary>
            计算新增的反写条目本次的实际反写需求；不同的操作有不同的计算方法，需重载；
            </summary>
            <param name="writebackrow"></param>
            <remarks>
            基类以保存/审核/反作废等正向操作进行实现
            </remarks>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BusinessFlow.WriteBackOperationController`1.CalcEditWriteBackRowRealAmount(Kingdee.BOS.BusinessEntity.BusinessFlow.WRule{`0})">
            <summary>
            计算修改的反写条目本次的实际反写需求；修改的条目，即有当前目标，亦有历史状况；
            </summary>
            <param name="writebackrow"></param>
            <remarks>
            基类以保存/审核/反作废等正向操作进行实现
            </remarks>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BusinessFlow.WriteBackOperationController`1.CalcDeleteWriteBackRowRealAmount(Kingdee.BOS.BusinessEntity.BusinessFlow.WRule{`0})">
            <summary>
            计算删除的反写条目本次的实际反写续期；删除的条目，只有历史，无当前目标，此时需清除历史影响
            </summary>
            <param name="writebackrow"></param>
            <remarks>
            基类以保存/审核/反作废等正向操作进行实现
            </remarks>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BusinessFlow.WriteBackOperationController`1.SyncWriteBackSourceRow(Kingdee.BOS.BusinessEntity.BusinessFlow.WSRows{`0},Kingdee.BOS.BusinessEntity.BusinessFlow.WSRows{`0})">
            <summary>
            比较反写条目的源行列表，找出源行列表的差异
            </summary>
            <param name="currentRows">当前行的反写要求</param>
            <param name="snapshotRows">历史反写要求</param>
            <param name="r">差异列表</param>
        </member>
        <member name="T:Kingdee.BOS.BusinessEntity.BusinessFlow.WriteBackOpType">
            <summary>
            反写操作类型，
            用来区分当前反写的操作是保存/删除/审核/反审核中的那种
            </summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.BusinessFlow.WriteBackOpType.Save">
            <summary>
            保存
            </summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.BusinessFlow.WriteBackOpType.Delete">
            <summary>
            删除
            </summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.BusinessFlow.WriteBackOpType.Audit">
            <summary>
            审核
            </summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.BusinessFlow.WriteBackOpType.UnAudit">
            <summary>
            反审核
            </summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.BusinessFlow.WriteBackOpType.Cancel">
            <summary>
            作废
            </summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.BusinessFlow.WriteBackOpType.UnCancel">
            <summary>
            反作废
            </summary>
        </member>
        <member name="T:Kingdee.BOS.BusinessEntity.BusinessFlow.WRule`1">
            <summary>
            反写条目，每目标行上的每反写规则对应一条
            </summary>
            <remarks>
            记录了:
            2. 采用的反写规则
            2. 待反写源单标示
            3. 待反写的源单字段
            4. 反写方法：累加、扣减、覆盖
            5. 反写值：
            6. 关闭等信息
            </remarks>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.BusinessFlow.WRule`1._conditionPass">
            <summary>
            执行条件是否达成; 默认达成，允许执行
            </summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.BusinessFlow.WRule`1._canWriteBack">
            <summary>
            本条目是否允许执行反写；在未执行场景检查(操作+增删改类型)前，为空
            </summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.BusinessFlow.WRule`1._roundMode">
            <summary>
            舍入类型,默认按照四舍五入进位
            </summary>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BusinessFlow.WRule`1.Clone">
            <summary>
            克隆本对象
            </summary>
            <returns></returns>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BusinessFlow.WRule`1.#ctor">
            <summary>
            构造函数，初始化集合对象
            </summary>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BusinessFlow.WRule`1.MergeHistoryRow(Kingdee.BOS.BusinessEntity.BusinessFlow.WRule{`0},Kingdee.BOS.BusinessEntity.BusinessFlow.WRule{`0})">
            <summary>
            合并当前条目与历史条目；
            </summary>
            <param name="historyRow"></param>
            <remarks>
            通过合并，使当前条目：
            同时具有目标反写量与历史反写量，可以直接推演出需执行量；
            也具有了历史实际的反写量
            </remarks>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BusinessFlow.WRule`1.CheckCanWriteBack(Kingdee.BOS.BusinessEntity.BusinessFlow.WriteBackOpType)">
            <summary>
            根据检查本条目能否执行；判断因素：反写条件、当前操作、条目增删改类型，不考虑改变量的影响；
            </summary>
            <param name="operationType">当前操作类型</param>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BusinessFlow.WRule`1.CalcRealAmount(Kingdee.BOS.BusinessEntity.BusinessFlow.WriteBackOpType)">
            <summary>
            根据条件，计算反写条目本次实际需要执行的量，反写成功后的总影响量
            </summary>
            <param name="operationType"></param>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BusinessFlow.WRule`1.TryCalcRealAmount(Kingdee.BOS.BusinessEntity.BusinessFlow.WriteBackOpType)">
            <summary>
            根据条件，尝试计算反写条目本次实际需要执行的量；
            因为源单行并未分配，所以算出来的量是不正确的。但对于需反写的源单行，计算结果是准确的
            </summary>
            <param name="operationType"></param>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BusinessFlow.WRule`1.EqualsWithOutAmount``1(Kingdee.BOS.BusinessEntity.BusinessFlow.WRule{``0},Kingdee.BOS.BusinessEntity.BusinessFlow.WRule{``0})">
            <summary>
            判断两个反写条目的目标是否一致；
            不比较实际的反写值，主要用来判定增删改的反写条目
            </summary>
            <returns>如果x和y的源单Id相同，且所有反写要求参数项也相同，返回true</returns>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.WRule`1.Id">
            <summary>
            反写规则标示: WriteBackRuleId
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.WRule`1.SId">
            <summary>
            直接源单的内码，需要据此检索出反写源单；SourceId
            如入库单由采购订单下推而来，其直接源单为采购订单，反写条目需要反写采购申请单
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.WRule`1.SForm">
            <summary>
            上游源单类型: SourceFormId
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.WRule`1.SFld">
            <summary>
            上游源单字段：SourceFieldKey
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.WRule`1.Op">
            <summary>
            绑定的操作 OperationNumber, 缩写以简化空间
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.WRule`1.WT">
            <summary>
            反写方式：累加 = 0、扣减 = 1、覆盖 = 2
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.WRule`1.TFld">
            <summary>
            本单反写控制字段：TargetFieldKey
            </summary>
            <remarks>
            只有在反写规则，把下游单据的控制字段值，反写到上游单据时，此属性才有值
            </remarks>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.WRule`1.HadRecordTakeAmount">
            <summary>
            已经记录了根据携带关系，追溯出来的上游单据最大可分配量
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.WRule`1.ConditionPass">
            <summary>
            执行条件是否达成，默认为达成，即允许执行本条目
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.WRule`1.CanWriteBack">
            <summary>
            本条目在本操作下，是否需要执行; 
            CheckCanWriteBack()方法执行后，将结果存在本属性
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.WRule`1.CVal">
            <summary>
            反写方式覆盖时，需覆盖源单字段的值，如当前日期等: CoverValue
            </summary>
            <remarks>
            不需要序列化到快照中
            </remarks>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.WRule`1.Val">
            <summary>
            本次计算需执行的总反写值;
            直接根据反写值公式计算出来的值，需要分配给对应的源单 : Value
            </summary>
            <remarks>
            参考量，使用时需重算，不需序列化; 缩写以减少存储空间
            </remarks>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.WRule`1.RoundMode">
            <summary>
            舍入类型,默认按照四舍五入进位
            </summary>
            <remarks>
            数量会按照单位上的舍入类型处理
            </remarks>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.WRule`1.Scale">
            <summary>
            反写值采用的小数位数：即字段的精度；分配时，将按照此精度计算；
            </summary>
            <remarks>
            中间变量，无需序列化记录历史
            </remarks>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.WRule`1.TargetDataEntity">
            <summary>
            下游单据单据行数据包，需要附加，用于插件收集当前单据的信息
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.WRule`1.CurrSourceRows">
            <summary>
            把当前计算出来的反写值分配到源单的结果（不考虑历史，仅按照分配原则进行分配）
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.WRule`1.HistorySourceRows">
            <summary>
            本条目对源单的历史记录：记录了历史反写了那些源单，写了多少；
            正向时，可据此计算出差量；反向时，可据此清除已反写量
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.WRule`1.RealSourceRows">
            <summary>
            本次实际需要执行分配量的量：
            结合本次计算出的目标量、历史量、操作方向（正/反），算出的实际需执行的源单条目
            </summary>
            <remarks>
            临时采用，不需要序列化到快照中
            </remarks>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.WRule`1.SRs">
            <summary>
            本次发生后，对各源单的最终反写结果：需要序列化,缩写名称以减少空间 ;
            保存时 = 目标反写结果 ;
            删除时 = 空集合，已经无影响了 ；ResultSourceRows
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.WRule`1.HOp">
            <summary>
            历史反写发生的操作；因为存在操作切换的可能，需要记录实际发生的操作
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.WRule`1.OperationControllers">
            <summary>
            各操作反写控制类
            </summary>
        </member>
        <member name="T:Kingdee.BOS.BusinessEntity.BusinessFlow.WRules`1">
            <summary>
            实体行的全部反写条目；每实体行允许绑定多个反写规则，每反写规则生成一反写条目到此集合
            </summary>
            <remarks>
            本数据对象，是前期对目标单据进行分析，生成的关联数据结构；
            据此结构，能够很清楚的生成实际需要更新到数据库的数据
            </remarks>
        </member>
        <member name="T:Kingdee.BOS.BusinessEntity.BusinessFlow.WSRow`1">
            <summary>
            反写条目的目标上游单
            记录源单行标示及反写值
            </summary>
            <typeparam name="T"></typeparam>
            <remarks>类名、属性尽可能简写，减少序列化量</remarks>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BusinessFlow.WSRow`1.Clone">
            <summary>
            复制对象
            </summary>
            <returns></returns>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BusinessFlow.WSRow`1.EqualsWithOutAmount``1(Kingdee.BOS.BusinessEntity.BusinessFlow.WSRow{``0},Kingdee.BOS.BusinessEntity.BusinessFlow.WSRow{``0})">
            <summary>
            判断两个反写源行是否目标一致
            不比较实际的反写值，主要用来判定增删改的反写条目
            </summary>
            <returns>如果x和y的源单Id相同，且所有反写要求参数项也相同，返回true</returns>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.WSRow`1.SId">
            <summary>
            源单行标示
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.WSRow`1.MaxVal">
            <summary>
            根据携带关系计算的最大分配量；不需序列化保存
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.WSRow`1.Val">
            <summary>
            反写量 AmountValue; 缩写以减少序列化空间
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.WSRow`1.SourceDataEntity">
            <summary>
            对应的源单数据包；
            </summary>
            <remarks>
            此属性在反写之前，分配反写量时，被赋值，反写时，可以直接使用
            </remarks>
        </member>
        <member name="T:Kingdee.BOS.BusinessEntity.BusinessFlow.WSRows`1">
            <summary>
            反写条目的反写源单集合
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.WSRows`1.TotalAmount">
            <summary>
            返回全部条目的反写量合计值
            </summary>
        </member>
        <member name="T:Kingdee.BOS.BusinessEntity.ConvertTracker.OpFormReturnInfo">
            <summary>
            操作窗口返回信息
            </summary>    
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.ConvertTracker.OpFormReturnInfo.#ctor(System.String,System.String,System.Int64)">
            <summary>
            构造函数
            </summary>
            <param name="selFormId"></param>
            <param name="ruleKey"></param>
            <param name="targetOrgId"></param>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.ConvertTracker.OpFormReturnInfo.SelFormId">
            <summary>
            选择的单据Id: 下推时 = 下游单据；选单时 = 上游单据
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.ConvertTracker.OpFormReturnInfo.RealSourceFormId">
            <summary>
            真实源单：
            第三方下推，其实际的源单，并不是界面所看的源单；
            生产订单 -> 生产领料：实际上是 用料清单 -> 生产领料；本属性存储用料清单
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.ConvertTracker.OpFormReturnInfo.RuleKey">
            <summary>
            选择的规则表示
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.ConvertTracker.OpFormReturnInfo.BillTypeId">
            <summary>
            选择的目标单据之单据类型
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.ConvertTracker.OpFormReturnInfo.TargetOrgId">
            <summary>
            选择的目标组织
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.ConvertTracker.OpFormReturnInfo.SelectByBillId">
            <summary>
            携带所选分录的整单
            </summary>
        </member>
        <member name="T:Kingdee.BOS.BusinessEntity.CustPortal.CustPortalInfo">
            <summary>
            客户门户相关公共信息
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.CustPortal.CustPortalInfo.BasketGoodsCount">
            <summary>
            购物篮的商品数量
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.CustPortal.CustPortalInfo.FavoriteGoodsCount">
            <summary>
            我的收藏的商品数量
            </summary>
        </member>
        <member name="T:Kingdee.BOS.BusinessEntity.FTPFileServer">
            <summary>
            FTP文件服务器
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.FTPFileServer.IP">
            <summary>
            IP地址
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.FTPFileServer.HostName">
            <summary>
            机器名
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.FTPFileServer.AbsolutePath">
            <summary>
            FTP服务器的公共文件服务器目录
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.FTPFileServer.Port">
            <summary>
            端口号
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.FTPFileServer.LocalMapDirectory">
            <summary>
            FTP文件服务器所映射的本地目录
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.KDSimpleProduct.ProductRegNO">
            <summary>
            产品序列号
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.KDSimpleProduct.Cells">
            <summary>
            加密单元
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.KDSimpleProduct.AdditionalInfo">
            <summary>
            特征码
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.KDSimpleProduct.Mode">
            <summary>
            加密模式
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.KDSimpleProduct.Type">
            <summary>
            许可证类型	
            正式许可证:1
            试用许可证:2
            限时许可证:3
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.KDSimpleProduct.Period">
            <summary>
            统计区间
            Y+[4位年份]+M+[2位月份]+W+[1位周数]
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.KDSimpleProduct.Deadline">
            <summary>
            过期日期
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.KDSimpleProduct.Accounts">
            <summary>
            帐套
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.Account.AccountName">
            <summary>
            帐套名称
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.Account.ProductVer">
            <summary>
            产品版本
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.Account.CustomName">
            <summary>
            客户名称
            </summary>
        </member>
        <member name="T:Kingdee.BOS.BusinessEntity.KDSite">
            <summary>
            K/3Cloud站点信息
            </summary>
        </member>
        <member name="T:Kingdee.BOS.BusinessEntity.MobileAppInfo">
            <summary>
            移动应用信息
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.MobileAppInfo.AppId">
            <summary>
            移动应用Id
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.MobileAppInfo.DeviceId">
            <summary>
            移动设备Id
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.MobileAppInfo.DeviceType">
            <summary>
            设备类型
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.MobileAppInfo.ClientVersion">
            <summary>
            客户端版本
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.MobileAppInfo.ClientOS">
            <summary>
            客户端操作系统
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.MobileAppInfo.Company">
            <summary>
            移动设备厂商
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.MobileAppInfo.DeviceModel">
            <summary>
            移动设备型号
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.MobileAppInfo.EffectiveDate">
            <summary>
            生效日期
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.MobileAppInfo.ExpirationDate">
            <summary>
            失效日期
            </summary>
        </member>
        <member name="T:Kingdee.BOS.BusinessEntity.Mobile.SMSCheckResultInfo">
            <summary>
            短信检查的返回信息
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.Mobile.SMSCheckResultInfo.Balance">
            <summary>
            余额
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.Mobile.SMSCheckResultInfo.SendResultId">
            <summary>
            发送结果编码
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.Mobile.SMSCheckResultInfo.SendResultMessage">
            <summary>
            结果产生原因
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.Mobile.SMSCheckResultInfo.CompanyName">
            <summary>
            公司名称
            </summary>
        </member>
        <member name="T:Kingdee.BOS.BusinessEntity.Mobile.SMSModifyPWReturnInfo">
            <summary>
            短信修改密码返回信息
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.Mobile.SMSModifyPWReturnInfo.SendResultId">
            <summary>
            发送结果编码
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.Mobile.SMSModifyPWReturnInfo.SendResultMessage">
            <summary>
            结果产生原因
            </summary>
        </member>
        <member name="T:Kingdee.BOS.BusinessEntity.Organizations.AccountSystem">
            <summary>
            会计核算体系
            </summary>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.Organizations.AccountSystem.#ctor(Kingdee.BOS.Orm.DataEntity.DynamicObject)">
            <summary>
            构造函数
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.Organizations.AccountSystem.op_Implicit(Kingdee.BOS.Orm.DataEntity.DynamicObject)~Kingdee.BOS.BusinessEntity.Organizations.AccountSystem">
            <summary>支持从DynamicObject隐式转化到AccountSystem类型</summary>
            <param name="obj">要隐式转换的动态实体</param>
            <returns>新构建的AccountSystem对象</returns>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.Organizations.AccountSystem.Id">
            <summary>
            主键ID
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.Organizations.AccountSystem.Number">
            <summary>
            代码
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.Organizations.AccountSystem.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.Organizations.AccountSystem.Description">
            <summary>
            描述
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.Organizations.AccountSystem.DocumentStatus">
            <summary>
            状态
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.Organizations.AccountSystem.AccountSystemEntrys">
            <summary>
            会计核算体系 之核算组织
            </summary>
        </member>
        <member name="T:Kingdee.BOS.BusinessEntity.Organizations.AccountSystemEntry">
            <summary>
            会计核算体系 之会计主体
            </summary>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.Organizations.AccountSystemEntry.#ctor(Kingdee.BOS.Orm.DataEntity.DynamicObject)">
            <summary>
            构造函数
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.Organizations.AccountSystemEntry.op_Implicit(Kingdee.BOS.Orm.DataEntity.DynamicObject)~Kingdee.BOS.BusinessEntity.Organizations.AccountSystemEntry">
            <summary>支持从DynamicObject隐式转化到Affiliation类型</summary>
            <param name="obj">要隐式转换的动态实体</param>
            <returns>新构建的Affiliation对象</returns>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.Organizations.AccountSystemEntry.AccountSystemDetails">
            <summary>
            会计核算体系 之下级组织
            </summary>
        </member>
        <member name="T:Kingdee.BOS.BusinessEntity.Organizations.AccountSystemDetail">
            <summary>
            会计核算体系 之下级组织
            </summary>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.Organizations.AccountSystemDetail.#ctor(Kingdee.BOS.Orm.DataEntity.DynamicObject)">
            <summary>
            构造函数
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.Organizations.AccountSystemDetail.op_Implicit(Kingdee.BOS.Orm.DataEntity.DynamicObject)~Kingdee.BOS.BusinessEntity.Organizations.AccountSystemDetail">
            <summary>支持从DynamicObject隐式转化到Affiliation类型</summary>
            <param name="obj">要隐式转换的动态实体</param>
            <returns>新构建的Affiliation对象</returns>
        </member>
        <member name="T:Kingdee.BOS.BusinessEntity.Organizations.Affiliation">
            <summary>
            组织隶属关系
            </summary>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.Organizations.Affiliation.#ctor(Kingdee.BOS.Orm.DataEntity.DynamicObject)">
            <summary>
            构造函数
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.Organizations.Affiliation.op_Implicit(Kingdee.BOS.Orm.DataEntity.DynamicObject)~Kingdee.BOS.BusinessEntity.Organizations.Affiliation">
            <summary>支持从DynamicObject隐式转化到Affiliation类型</summary>
            <param name="obj">要隐式转换的动态实体</param>
            <returns>新构建的Affiliation对象</returns>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.Organizations.Affiliation.AffiliationEntrys">
            <summary>
            组织隶属关系明细
            </summary>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.Organizations.AffiliationEntry.#ctor(Kingdee.BOS.Orm.DataEntity.DynamicObject)">
            <summary>
            构造函数
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.Organizations.AffiliationEntry.op_Implicit(Kingdee.BOS.Orm.DataEntity.DynamicObject)~Kingdee.BOS.BusinessEntity.Organizations.AffiliationEntry">
            <summary>支持从DynamicObject隐式转化到Affiliation类型</summary>
            <param name="obj">要隐式转换的动态实体</param>
            <returns>新构建的SubSystem对象</returns>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.Organizations.AllocateInfo.Create(System.Data.DataRow)">
            <summary>
            
            </summary>
            <param name="dr"></param>
            <returns></returns>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.Organizations.AllocateInfo.GetFormatedSourceIdAndDestOrgId">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.Organizations.AllocateInfo.AllocateId">
            <summary>
            唯一标识
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.Organizations.AllocateInfo.EntryId">
            <summary>
            实体的ID
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.Organizations.AllocateInfo.FormId">
            <summary>
            视图的ID
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.Organizations.AllocateInfo.TableName">
            <summary>
            表的名称
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.Organizations.AllocateInfo.HeadSourceId">
            <summary>
            源表头的ID
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.Organizations.AllocateInfo.SourceId">
            <summary>
            源Id
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.Organizations.AllocateInfo.DestId">
            <summary>
            目标Id
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.Organizations.AllocateInfo.SourceOrgId">
            <summary>
            源组织Id
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.Organizations.AllocateInfo.DestOrgId">
            <summary>
            目标组织Id
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.Organizations.AllocateInfo.AllocateDate">
            <summary>
            分配的时间
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.Organizations.AllocateInfo.AllocatorId">
            <summary>
            分配者
            </summary>
        </member>
        <member name="T:Kingdee.BOS.BusinessEntity.Organizations.AllocateSourceInfo">
            <summary>
            分配数据的源信息类
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.Organizations.AllocateSourceInfo.FormId">
            <summary>
            分配的基础资料的FormId
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.Organizations.AllocateSourceInfo.SourceId">
            <summary>
            分配的基础资料的源SourceId（即MasterId或其他组织下的FID）
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.Organizations.AllocateSourceInfo.DestOrgId">
            <summary>
            分配的基础资料的目标组织DestOrgId
            </summary>
        </member>
        <member name="T:Kingdee.BOS.BusinessEntity.Organizations.BaseDataControlPolicy">
            <summary>
            基础资料控制策略对象视图
            </summary>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.Organizations.BaseDataControlPolicy.#ctor(Kingdee.BOS.Orm.DataEntity.DynamicObject)">
            <summary>
            构造函数
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.Organizations.BaseDataControlPolicy.op_Implicit(Kingdee.BOS.Orm.DataEntity.DynamicObject)~Kingdee.BOS.BusinessEntity.Organizations.BaseDataControlPolicy">
            <summary>支持从DynamicObject隐式转化到Affiliation类型</summary>
            <param name="obj">要隐式转换的动态实体</param>
            <returns>新构建的Affiliation对象</returns>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.Organizations.BaseDataControlPolicy.TargetOrgEntrys">
            <summary>
            目的组织分录
            </summary>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.Organizations.BaseDataType.#ctor(Kingdee.BOS.Orm.DataEntity.DynamicObject)">
            <summary>
            构造函数
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.Organizations.BaseDataType.op_Implicit(Kingdee.BOS.Orm.DataEntity.DynamicObject)~Kingdee.BOS.BusinessEntity.Organizations.BaseDataType">
            <summary>支持从DynamicObject隐式转化到BaseDataType类型</summary>
            <param name="obj">要隐式转换的动态实体</param>
            <returns>新构建的BaseDataType对象</returns>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.Organizations.BaseDataType.Number">
            <summary>
            代码
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.Organizations.BaseDataType.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.Organizations.BaseDataType.StrategyType">
            <summary>
            策略类型
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.Organizations.BaseDataType.DataType">
            <summary>
            资料类型
            </summary>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.Organizations.BaseDataControlPolicyTargetOrgEntry.#ctor(Kingdee.BOS.Orm.DataEntity.DynamicObject)">
            <summary>
            构造函数
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.Organizations.BaseDataControlPolicyTargetOrgEntry.op_Implicit(Kingdee.BOS.Orm.DataEntity.DynamicObject)~Kingdee.BOS.BusinessEntity.Organizations.BaseDataControlPolicyTargetOrgEntry">
            <summary>支持从DynamicObject隐式转化到BaseDataControlPolicyTargetOrgEntry类型</summary>
            <param name="obj">要隐式转换的动态实体</param>
            <returns>新构建的Affiliation对象</returns>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.Organizations.BaseDataControlPolicyTargetOrgEntry.TargetOrg">
            <summary>
            目的组织
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.Organizations.BaseDataControlPolicyTargetOrgEntry.PropertyEntrys">
            <summary>
            该组织下属性分配策略
            </summary>
        </member>
        <member name="T:Kingdee.BOS.BusinessEntity.Organizations.BaseDataControlPolicyPropertyEntry">
            <summary>
            基础资料属性控制策略
            </summary>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.Organizations.BaseDataControlPolicyPropertyEntry.#ctor(Kingdee.BOS.Orm.DataEntity.DynamicObject)">
            <summary>
            构造函数
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.Organizations.BaseDataControlPolicyPropertyEntry.op_Implicit(Kingdee.BOS.Orm.DataEntity.DynamicObject)~Kingdee.BOS.BusinessEntity.Organizations.BaseDataControlPolicyPropertyEntry">
            <summary>支持从DynamicObject隐式转化到BaseDataControlPolicyTargetOrgEntry类型</summary>
            <param name="obj">要隐式转换的动态实体</param>
            <returns>新构建的Affiliation对象</returns>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.Organizations.BaseDataControlPolicyPropertyEntry.ControlTypeId">
            <summary>
            控制策略  1:携带 2:默认 3:留空
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.Organizations.BaseDataControlPolicyPropertyEntry.DefaultValue">
            <summary>
            默认值
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.Organizations.BaseDataControlPolicyPropertyEntry.Locked">
            <summary>
            锁定
            </summary>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.Organizations.Organization.#ctor">
            <summary>
            构造函数
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.Organizations.Organization.op_Implicit(Kingdee.BOS.Orm.DataEntity.DynamicObject)~Kingdee.BOS.BusinessEntity.Organizations.Organization">
            <summary>支持从DynamicObject隐式转化到Organization类型</summary>
            <param name="obj">要隐式转换的动态实体</param>
            <returns>新构建的SubSystem对象</returns>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.Organizations.Organization.Id">
            <summary>
            唯一标识
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.Organizations.Organization.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.Organizations.Organization.OrgFunctions">
            <summary>
            组织职能
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.Organizations.Organization.Number">
            <summary>
            组织编码
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.Organizations.Organization.OrgFormID">
            <summary>
            组织形态
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.Organizations.Organization.Tel">
            <summary>
            电话
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.Organizations.Organization.Contact">
            <summary>
            联系人
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.Organizations.Organization.Description">
            <summary>
            描述 ?多语言  
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.Organizations.Organization.IsCorp">
            <summary>
            是否法人
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.Organizations.Organization.IsProfileCenter">
            <summary>
            是否利润中心
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.Organizations.Organization.IsBusinessOrg">
            <summary>
            是否业务组织
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.Organizations.Organization.IsAccountOrg">
            <summary>
            是否核算组织
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.Organizations.Organization.ParentId">
            <summary>
            所属法人
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.Organizations.Organization.ForbidStatus">
            <summary>
            禁用标志
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.Organizations.Organization.DocumentStatus">
            <summary>
            审核标志
            </summary>
        </member>
        <member name="T:Kingdee.BOS.BusinessEntity.Organizations.OrgBizRelation">
            <summary>
            组织隶属关系
            </summary>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.Organizations.OrgBizRelation.#ctor(Kingdee.BOS.Orm.DataEntity.DynamicObject)">
            <summary>
            构造函数
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.Organizations.OrgBizRelation.op_Implicit(Kingdee.BOS.Orm.DataEntity.DynamicObject)~Kingdee.BOS.BusinessEntity.Organizations.OrgBizRelation">
            <summary>支持从DynamicObject隐式转化到Affiliation类型</summary>
            <param name="obj">要隐式转换的动态实体</param>
            <returns>新构建的Affiliation对象</returns>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.Organizations.OrgBizRelation.OrgBizRelationEntrys">
            <summary>
            组织隶属关系明细
            </summary>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.Organizations.OrgBizRelationEntry.#ctor(Kingdee.BOS.Orm.DataEntity.DynamicObject)">
            <summary>
            构造函数
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.Organizations.OrgBizRelationEntry.op_Implicit(Kingdee.BOS.Orm.DataEntity.DynamicObject)~Kingdee.BOS.BusinessEntity.Organizations.OrgBizRelationEntry">
            <summary>支持从DynamicObject隐式转化到Affiliation类型</summary>
            <param name="obj">要隐式转换的动态实体</param>
            <returns>新构建的SubSystem对象</returns>
        </member>
        <member name="T:Kingdee.BOS.BusinessEntity.Organizations.OrgBodyForm">
            <summary>
            组织形态类
            </summary>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.Organizations.OrgBodyForm.#ctor(Kingdee.BOS.Orm.DataEntity.DynamicObject)">
            <summary>
            构造函数
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.Organizations.OrgBodyForm.op_Implicit(Kingdee.BOS.Orm.DataEntity.DynamicObject)~Kingdee.BOS.BusinessEntity.Organizations.OrgBodyForm">
            <summary>支持从DynamicObject隐式转化到OrgBodyForm类型</summary>
            <param name="obj">要隐式转换的动态实体</param>
            <returns>新构建的OrgBodyForm对象</returns>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.Organizations.OrgBodyForm.Id">
            <summary>
            唯一标识
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.Organizations.OrgBodyForm.Number">
            <summary>
            代码
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.Organizations.OrgBodyForm.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="T:Kingdee.BOS.BusinessEntity.Organizations.OrgFuncs">
            <summary>
            组织职能类
            </summary>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.Organizations.OrgFuncs.#ctor(Kingdee.BOS.Orm.DataEntity.DynamicObject)">
            <summary>
            构造函数
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.Organizations.OrgFuncs.op_Implicit(Kingdee.BOS.Orm.DataEntity.DynamicObject)~Kingdee.BOS.BusinessEntity.Organizations.OrgFuncs">
            <summary>支持从DynamicObject隐式转化到OrgFuncs类型</summary>
            <param name="obj">要隐式转换的动态实体</param>
            <returns>新构建的OrgFuncs对象</returns>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.Organizations.OrgFuncs.Id">
            <summary>
            唯一标识
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.Organizations.OrgFuncs.Number">
            <summary>
            代码
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.Organizations.OrgFuncs.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="T:Kingdee.BOS.BusinessEntity.Package.QueryDbInfo">
            <summary>
            查询数据库信息
            </summary>
        </member>
        <member name="T:Kingdee.BOS.BusinessEntity.SimpleBusinessObject">
            <summary>
            简版业务对象
            </summary>
        </member>
        <member name="T:Kingdee.BOS.BusinessEntity.ConflictInfo">
            <summary>
            冲突信息
            首先控制重复的元数据，有关数据库结构的处理策略是：
            如果发现有相同字段，而且类型相同，则正常使用；如果
            类型不同，报错。对也业务数据的冲突，暂不做处理
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.ConflictInfo.NotImportedPackages">
             <summary>
            冲突信息：导入包的时候，需要导入，但未被导入的包列表
             </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.ConflictInfo.ExclusivePackages">
            <summary>
            冲突信息：启用包时，存在互斥的包列表
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.ConflictInfo.NotStoppedPackages">
            <summary>
            需要停用，但是未被停用的包列表
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.ConflictInfo.UsingPackagesWhenRemove">
            <summary>
            冲突信息：选择移除的包存在正在使用的情况
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.ConflictInfo.NotRemovedPackages">
            <summary>
            需要移除，但是未被移除的包列表
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.ConflictInfo.RepeatedBusinessObjects">
            <summary>
            重复的元数据
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.ConflictInfo.NeedImportedPackages">
            <summary>
            Add By Kim Gong
            </summary>
        </member>
        <member name="T:Kingdee.BOS.BusinessEntity.BusinessFlow.RouteTreeNodeReverse">
            <summary>
            反向节点树，用于追溯来源：从末节点开始，逐层分叉记录其父节点，形成一颗逆向树
            </summary>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BusinessFlow.RouteTreeNodeReverse.#ctor(System.Collections.Generic.List{Kingdee.BOS.BusinessEntity.BusinessFlow.RouteTreeNode})">
            <summary>
            构造函数；以正向树的节点进行反向构建
            </summary>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BusinessFlow.RouteTreeNodeReverse.RefreshParentNodes(System.Collections.Generic.List{Kingdee.BOS.BusinessEntity.BusinessFlow.RouteTreeNode})">
            <summary>
            递归刷新本节点的上游节点
            </summary>
            <param name="routeTreeNodes">本节点对应的正向节点集合</param>
            <remarks>
            逐一分析正向节点上的父节点，并进行归纳，递归逐层构建其父节点
            </remarks>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BusinessFlow.RouteTreeNodeReverse.SearchFirstNodes(System.Collections.Generic.List{Kingdee.BOS.BusinessEntity.BusinessFlow.RouteTreeNodeReverse}@)">
            <summary>
            寻找首节点列表；从本节点开始找，能够找到全部的首节点
            </summary>
            <param name="firstNodes"></param>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BusinessFlow.RouteTreeNodeReverse.SearchParentNodes(Kingdee.BOS.BusinessEntity.BusinessFlow.Id,System.Collections.Generic.List{Kingdee.BOS.BusinessEntity.BusinessFlow.RouteTreeNodeReverse}@)">
            <summary>
            在本节点及父节点中，寻找指定的节点集合;
            含本节点;
            如果本节点即时目标节点，直接返回，否则遍历其上游
            </summary>
            <param name="sourceId"></param>
            <param name="parentNodes"></param>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.RouteTreeNodeReverse.Id">
            <summary>
            本节点对应的数据行
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.RouteTreeNodeReverse.SAmounts">
            <summary>
            本数据行从上游单据携带过来控制字段值
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.RouteTreeNodeReverse.HadRecordTakeAmount">
            <summary>
            本节点的分配值，是根据控制字段逆向查找分配；
            </summary>
            <remarks>只有保持控制字段的连贯，才能追溯到上游源单</remarks>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.RouteTreeNodeReverse.MaxAmount">
            <summary>
            最大可分配量；
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.RouteTreeNodeReverse.ParentNodes">
            <summary>
            直接来源节点；反向树上，每节点有多上级，用于追溯其全部来源；
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BusinessFlow.RouteTreeNodeReverse.ChildNode">
            <summary>
            下游节点；在反向树上，每节点只有一个下级节点
            </summary>
            <remarks>
            如果某单据拆分下推的，在节点树中，将以多个节点存在
            </remarks>
        </member>
        <member name="T:Kingdee.BOS.BusinessEntity.User">
            <summary>
            用户的实体定义, 用户角色的存放也使用这个类.
            NOT NULL类型的字段均需要设置默认值,并需要在属性中定义一致.
            
            </summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.User.USER_FFORBIDSTATUS_VALIDATED">
            <summary>
            有效状态
            </summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.User.USER_FFORBIDSTATUS_DISABLED">
            <summary>
            禁用状态
            </summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.User.USER_INNER">
            <summary>
            内部用户
            </summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.User.USER_EXTERNAL">
            <summary>
            外部用户
            </summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.User.UserType">
            <summary>KDUser的动态类型</summary>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.User.#ctor(Kingdee.BOS.Orm.DataEntity.DynamicObject)">
            <summary></summary>
            <param name="obj"></param>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.User.op_Implicit(Kingdee.BOS.Orm.DataEntity.DynamicObject)~Kingdee.BOS.BusinessEntity.User">
            <summary>支持从DynamicObject隐式转化到KDUser类型</summary>
            <param name="obj">要隐式转换的动态实体</param>
            <returns>新构建的KDUser对象</returns>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.User.UserIDProperty">
            <summary>FUserID的属性描述符</summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.User.OrgIDProperty">
            <summary>FUserID的属性描述符</summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.User.PhoneProperty">
            <summary>FName的属性描述符</summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.User.UserNameProperty">
            <summary>FName的属性描述符</summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.User.PrimaryGroupProperty">
            <summary>FPrimaryGroup的属性描述符</summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.User.DescriptionProperty">
            <summary>FPrimaryGroup的属性描述符</summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.User.WeiboAccontProperty">
            <summary>FWeiboAccont的属性描述符</summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.User.RegStateProperty">
            <summary>FRegState的属性描述符</summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.User.AccessTokenProperty">
            <summary>FAccessToken的属性描述符</summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.User.TokenSecretProperty">
            <summary>FTokenSecret的属性描述符</summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.User.WeiboUserIdProperty">
            <summary>FWeiboUserId的属性描述符</summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.User.UserAccountProperty">
            <summary>FUserAccount的属性描述符</summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.User.ForbiddenProperty">
            <summary>FForbidden的属性描述符</summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.User.SafeModeProperty">
            <summary>FSafeMode的属性描述符</summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.User.UserTypeIDProperty">
            <summary>FUserTypeID的属性描述符</summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.User.CustIDProperty">
            <summary>FCustID的属性描述符</summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.User.EmpIDProperty">
            <summary>FCustID的属性描述符</summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.User.SupplierIDProperty">
            <summary>FSupplierID的属性描述符</summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.User.PWDValiddayProperty">
            <summary>FPWValidday的属性描述符</summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.User.UInvaliddateProperty">
            <summary>FUInvaliddate的属性描述符</summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.User.IsLockProperty">
            <summary>IsLock的属性描述符</summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.User.UnlockTimeProperty">
            <summary>UnlockTime的属性描述符</summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.User.PwdValidDateProperty">
            <summary>PwdValidDate的属性描述符</summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.User.PwdModifyValidDateProperty">
            <summary>PwdModifyValidDate的属性描述符</summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.User.IsSystemGenProperty">
            <summary>IsSystemGen的属性描述符</summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.User.LoginCountProperty">
            <summary>LoginCount的属性描述符</summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.User.ErrorCountProperty">
            <summary>ErrorCount的属性描述符</summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.User.PasswordProperty">
            <summary>Password的属性描述符</summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.User.UserID">
            <summary>
            返回/设置 FUserID的主键
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.User.OrgID">
            <summary>
            返回/设置 FOrgID
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.User.Phone">
            <summary>
            返回/设置 FName
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.User.UserName">
            <summary>
            返回/设置 FName
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.User.PrimaryGroup">
            <summary>
            返回/设置 FPrimaryGroup在这里填写属性的注释文本
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.User.Description">
            <summary>
            返回/设置 FDescription
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.User.WeiboAccont">
            <summary>
            返回/设置 FWeiboAccont
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.User.RegState">
            <summary>
            返回/设置 FRegState
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.User.AccessToken">
            <summary>
            返回/设置 FAccessToken
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.User.TokenSecret">
            <summary>
            返回/设置 FTokenSecret
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.User.WeiboUserId">
            <summary>
            返回/设置 FWeiboUserId
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.User.UserAccount">
            <summary>
            返回/设置 FUserAccount
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.User.Forbidden">
             <summary>
            用户禁用状态
             "A"表示有效用户
             "B"表示用户已禁用
             </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.User.SafeMode">
            <summary>
            返回/设置 FForbidden
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.User.UserTypeID">
            <summary>
            返回/设置 FUserTypeID
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.User.CustID">
            <summary>
            返回/设置 FCustID
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.User.EmpID">
            <summary>
            返回/设置 FEmpID
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.User.SupplierID">
            <summary>
            返回/设置 FSupplierID
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.User.PWDValidday">
            <summary>
            返回/设置 FPWValidday
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.User.UInvaliddate">
            <summary>
            返回/设置 FUInvaliddate
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.User.UserCategory">
            <summary>
            用户类型 
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.User.IsLock">
            <summary>
            返回/设置 密码是否锁定
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.User.UnlockTime">
            <summary>
            返回/设置 自动解锁时间
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.User.PwdValidDate">
            <summary>
            返回/设置 密码有效期
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.User.PwdModifyValidDate">
            <summary>
            返回/设置 密码修改有效日期
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.User.IsSystemGen">
            <summary>
            返回/设置 是否系统生成的密码
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.User.LoginCount">
            <summary>
            返回/设置 使用系统密码登录次数
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.User.ErrorCount">
            <summary>
            返回/设置 密码错误次数
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.User.Password">
            <summary>
            返回/设置 用户密码
            </summary>
        </member>
        <member name="T:Kingdee.BOS.BusinessEntity.UserManager.EnterpriseMB">
            <summary>
            企业微博信息
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.UserManager.EnterpriseMB.Email">
            <summary>
            企业邮箱
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.UserManager.EnterpriseMB.TokenKey">
            <summary>
            oauth_tokenkey
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.UserManager.EnterpriseMB.TokenSecret">
            <summary>
            oauth_tokensecret
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.UserManager.EnterpriseMB.MicroBlogUrl">
            <summary>
            微博地址
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.UserManager.EnterpriseMB.CompanyNetworkID">
            <summary>
            公司网络ID
            </summary>
        </member>
        <member name="T:Kingdee.BOS.BusinessEntity.UserManager.PasswordPolicy">
            <summary>
            时效规则
            </summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.UserManager.PasswordPolicy.PasswordPolicyType">
            <summary>PasswordPolicy的动态类型</summary>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.UserManager.PasswordPolicy.#ctor(Kingdee.BOS.Orm.DataEntity.DynamicObject)">
            <summary>创建 PasswordPolicy 实例</summary>
            <param name="obj">视图访问类实际操作的动态实体，不能为null</param>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.UserManager.PasswordPolicy.op_Implicit(Kingdee.BOS.Orm.DataEntity.DynamicObject)~Kingdee.BOS.BusinessEntity.UserManager.PasswordPolicy">
            <summary>支持从DynamicObject隐式转化到PasswordPolicy类型</summary>
            <param name="obj">要隐式转换的动态实体</param>
            <returns>新构建的PasswordPolicy对象</returns>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.UserManager.PasswordPolicy.Id">
            <summary>
            唯一标识
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.UserManager.PasswordPolicy.MinLength">
            <summary>
            密码最小长度
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.UserManager.PasswordPolicy.IsMandatory">
            <summary>
            是否强制执行校验。
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.UserManager.PasswordPolicy.CharTypes">
            <summary>
            密码字符集类型，多选
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.UserManager.PasswordPolicy.EnableValid">
            <summary>
            启用密码有效期控制设置
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.UserManager.PasswordPolicy.ValidDays">
            <summary>
            密码有效期天数
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.UserManager.PasswordPolicy.EnableAlert">
            <summary>
            启用密码到期前预警设置
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.UserManager.PasswordPolicy.AlertDays">
            <summary>
            密码到期前预警天数
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.UserManager.PasswordPolicy.EnableModify">
            <summary>
            启用修改密码有效期设置
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.UserManager.PasswordPolicy.ModifyDays">
            <summary>
            修改密码有效期控制天数
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.UserManager.PasswordPolicy.EnableModifyAlert">
            <summary>
            启用修改密码到期前预警设置
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.UserManager.PasswordPolicy.ModifyAlertDays">
            <summary>
            修改密码到期前预警天数
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.UserManager.PasswordPolicy.EnableNotRepeat">
            <summary>
            启用密码不重复限制
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.UserManager.PasswordPolicy.NotRepeatDays">
            <summary>
            密码不能重复天数
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.UserManager.PasswordPolicy.DisableSysPWD">
            <summary>
            不用允许使用系统密码，即使用系统生成密码登陆系统时要求修改密码
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.UserManager.PasswordPolicy.EnableSysPWD">
            <summary>
            启用系统密码使用次数控制
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.UserManager.PasswordPolicy.SysPWDCount">
            <summary>
            可以使用系统生成密码登陆系统次数
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.UserManager.PasswordPolicy.EnableErrorLock">
            <summary>
            启用密码错误超过一定次数自动锁定用户
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.UserManager.PasswordPolicy.ErrorLockCount">
            <summary>
            登录系统时密码输入错误*次后自动锁定用户
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.UserManager.PasswordPolicy.EnableAutoUnlock">
            <summary>
            启用自动解锁
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.UserManager.PasswordPolicy.HowLongUnlock">
            <summary>
            自动解锁时间（几分钟/几小时/几天）
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.UserManager.PasswordPolicy.TimeUnit">
            <summary>
             时间单位分/时/天
            </summary>
        </member>
        <member name="T:Kingdee.BOS.BusinessEntity.UserManager.CharacterType">
            <summary>
            字符类型
            </summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.UserManager.CharacterType.Numbers">
            <summary>
            数字
            </summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.UserManager.CharacterType.Characters">
            <summary>
            字母
            </summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.UserManager.CharacterType.SpecialChars">
            <summary>
            特殊字符
            </summary>
        </member>
        <member name="T:Kingdee.BOS.BusinessEntity.UserManager.TimeUnit">
            <summary>
            时间单位
            </summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.UserManager.TimeUnit.Minute">
            <summary>
            分钟
            </summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.UserManager.TimeUnit.Hour">
            <summary>
            小时
            </summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.UserManager.TimeUnit.Day">
            <summary>
            天
            </summary>
        </member>
        <member name="T:Kingdee.BOS.BusinessEntity.UserManager.SendUserExpaInfo">
            <summary>
            用户体验发送信息
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.UserManager.SendUserExpaInfo.NeedSend">
            <summary>
            是否需要发送
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.UserManager.SendUserExpaInfo.SendUser">
            <summary>
            发送用户
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.UserManager.SendUserExpaInfo.SendInfo">
            <summary>
            发送信息
            </summary>
        </member>
        <member name="T:Kingdee.BOS.BusinessEntity.UserManager.TimeLimitRule">
            <summary>
            时效规则
            </summary>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.UserManager.TimeLimitRule.#ctor">
            <summary>
            构造函数
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.UserManager.TimeLimitRule.op_Implicit(Kingdee.BOS.Orm.DataEntity.DynamicObject)~Kingdee.BOS.BusinessEntity.UserManager.TimeLimitRule">
            <summary>支持从DynamicObject隐式转化到Organization类型</summary>
            <param name="obj">要隐式转换的动态实体</param>
            <returns>新构建的SubSystem对象</returns>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.UserManager.TimeLimitRule.Id">
            <summary>
            唯一标识
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.UserManager.TimeLimitRule.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.UserManager.TimeLimitRule.LimitType">
            <summary>
            时效类型
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.UserManager.TimeLimitRule.StartTime">
            <summary>
            开始时间
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.UserManager.TimeLimitRule.EndTime">
            <summary>
            结束时间
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.UserManager.TimeLimitRule.DayOfWeeks">
            <summary>
            星期列表
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.UserManager.TimeLimitRule.OrgID">
            <summary>
            组织机构ID
            </summary>
        </member>
        <member name="T:Kingdee.BOS.BusinessEntity.UserManager.LimitType">
            <summary>
            时效类型
            </summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.UserManager.LimitType.LimitByTime">
            <summary>
            按时间段
            </summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.UserManager.LimitType.LimitByDate">
            <summary>
            按日期范围
            </summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.UserManager.LimitType.LimitByWeek">
            <summary>
            按星期
            </summary>
        </member>
        <member name="T:Kingdee.BOS.BusinessEntity.BillTrack.ViewBusinessFlowRowInfo">
            <summary>
            查看业务流程图，发起单据实体行及其对应的业务流程图
            </summary>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BillTrack.ViewBusinessFlowRowInfo.#ctor(System.String,System.Int64,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="entityId"></param>
            <param name="flowId"></param>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BillTrack.ViewBusinessFlowRowInfo.EntityKey">
            <summary>
            关联主实体
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BillTrack.ViewBusinessFlowRowInfo.EntityId">
            <summary>
            实体行内码
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BillTrack.ViewBusinessFlowRowInfo.FlowId">
            <summary>
            实体行采用的业务流程图
            </summary>
        </member>
        <member name="T:Kingdee.BOS.BusinessEntity.BillTrack.ViewLinkDataBillInfo">
            <summary>
            发起上下查的单据数据
            </summary>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BillTrack.ViewLinkDataBillInfo.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="formId"></param>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BillTrack.ViewLinkDataBillInfo.FormId">
            <summary>
            发起上下查的单据FormId
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BillTrack.ViewLinkDataBillInfo.Rows">
            <summary>
            发起上下查的单据数据行
            </summary>
        </member>
        <member name="T:Kingdee.BOS.BusinessEntity.BillTrack.ViewLinkDataRowInfo">
            <summary>
            发起上下查的单据行数据
            </summary>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.BillTrack.ViewLinkDataRowInfo.#ctor(System.String,System.Int64,System.Int64)">
            <summary>
            构造函数
            </summary>
            <param name="entityKey">实体</param>
            <param name="billId">单据内码</param>
            <param name="entityId">实体行数据内码</param>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BillTrack.ViewLinkDataRowInfo.EntityKey">
            <summary>
            实体
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BillTrack.ViewLinkDataRowInfo.BillId">
            <summary>
            单据内码
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.BillTrack.ViewLinkDataRowInfo.EntityId">
            <summary>
            实体行数据内码
            </summary>
        </member>
        <member name="T:Kingdee.BOS.BusinessEntity.XunTong.ERPServiceOpenRequestInfo">
            <summary>
            同意讯通协议请求信息（eid和sn两者必填一个）
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.XunTong.ERPServiceOpenRequestInfo.eid">
            <summary>
            企业3G号
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.XunTong.ERPServiceOpenRequestInfo.sn">
            <summary>
            特征码
            </summary>
        </member>
        <member name="T:Kingdee.BOS.BusinessEntity.XunTong.ERPServiceOpenResponseInfo">
            <summary>
            同意接口的返回信息
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.XunTong.ERPServiceOpenResponseInfo.success">
            <summary>
            是否成功 
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.XunTong.ERPServiceOpenResponseInfo.error">
            <summary>
            错误信息
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.XunTong.ERPServiceOpenResponseInfo.errorCode">
            <summary>
            错误代码
            </summary>
        </member>
        <member name="T:Kingdee.BOS.BusinessEntity.XunTong.ResultItemInfo">
            <summary>
            返回详细消息项
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.XunTong.ResultItemInfo.id">
            <summary>
            id
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.XunTong.ResultItemInfo.msgCode">
            <summary>
            消息代码
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.XunTong.ResultItemInfo.msg">
            <summary>
            错误原因
            </summary>
        </member>
        <member name="T:Kingdee.BOS.BusinessEntity.XunTong.MsgCode">
            <summary>
            消息代码
            </summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.XunTong.MsgCode.RepeatedRequests">
            <summary>
            不能重复请求
            </summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.XunTong.MsgCode.MidIsEmpty">
            <summary>
            MID不能为空
            </summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.XunTong.MsgCode.ErrorMid">
            <summary>
            非法的MID，未在mcloud注册
            </summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.XunTong.MsgCode.DataEncryptionError">
            <summary>
            数据加密错误
            </summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.XunTong.MsgCode.DataBigError">
            <summary>
            导入数据量超标
            </summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.XunTong.MsgCode.DatabaseError">
            <summary>
            数据库异常
            </summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.XunTong.MsgCode.DataEmptyError">
            <summary>
            数据为空
            </summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.XunTong.MsgCode.RequestJsonDataFormatError">
            <summary>
            请求的json数据格式错误
            </summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.XunTong.MsgCode.MidNoEqualError">
            <summary>
            Data中eid与参数中eid不同
            </summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.XunTong.MsgCode.UserHasExist">
            <summary>
            导入职员已存在
            </summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.XunTong.MsgCode.UserImportSuccess">
            <summary>
            人员导入成功
            </summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.XunTong.MsgCode.UserUpdateSuccess">
            <summary>
            人员更新成功
            </summary>
        </member>
        <member name="T:Kingdee.BOS.BusinessEntity.XunTong.OpenEnterpriseInfo">
            <summary>
            open企业树
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.XunTong.OpenEnterpriseInfo.company">
            <summary>
            公司信息
            </summary>
        </member>
        <member name="T:Kingdee.BOS.BusinessEntity.XunTong.CompanyInfo">
            <summary>
            公司信息
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.XunTong.CompanyInfo.eid">
            <summary>
            mcloud ID
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.XunTong.CompanyInfo.sn">
            <summary>
            ERP产品序列号
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.XunTong.CompanyInfo.dataCenterId">
            <summary>
            数据中心ID
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.XunTong.CompanyInfo.dataCenterName">
            <summary>
            数据中心名称
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.XunTong.CompanyInfo.orgs">
            <summary>
            组织机构
            </summary>
        </member>
        <member name="T:Kingdee.BOS.BusinessEntity.XunTong.OrgImprotResultInfo">
            <summary>
            组织导入讯通返回结果类
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.XunTong.OrgImprotResultInfo.orgList">
            <summary>
            详细的结果列表
            </summary>
        </member>
        <member name="T:Kingdee.BOS.BusinessEntity.XunTong.OrgInfo">
            <summary>
            导入讯通的组织信息
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.XunTong.OrgInfo.id">
            <summary>
            组织ID
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.XunTong.OrgInfo.name">
            <summary>
            组织名称
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.XunTong.OrgInfo.parentId">
            <summary>
            父组织Id
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.XunTong.OrgInfo.description">
            <summary>
            描述
            </summary>
        </member>
        <member name="T:Kingdee.BOS.BusinessEntity.XunTong.OrgJobInfo">
            <summary>
            员工所属的组织职位信息
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.XunTong.OrgJobInfo.id">
            <summary>
            组织id
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.XunTong.OrgJobInfo.job">
            <summary>
            职位
            </summary>
        </member>
        <member name="T:Kingdee.BOS.BusinessEntity.XunTong.OrgImportResponseInfo">
            <summary>
            组织导入的返回信息
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.XunTong.OrgImportResponseInfo.data">
            <summary>
            详细的信息
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.XunTong.OrgImportResponseInfo.error">
             <summary>
            错误信息，如果success=false，携带此信息
             </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.XunTong.OrgImportResponseInfo.errorCode">
            <summary>
            错误代码
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.XunTong.OrgImportResponseInfo.success">
            <summary>
            允许部分成功，有一条导入失败，就返回false,是否成功，true|false
            </summary>
        </member>
        <member name="T:Kingdee.BOS.BusinessEntity.XunTong.MCloudPostInfo">
            <summary>
            mcloudPost信息
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.XunTong.MCloudPostInfo.action">
            <summary>
            action
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.XunTong.MCloudPostInfo.timestamp">
            <summary>
            时间戳
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.XunTong.MCloudPostInfo.nonce">
            <summary>
            随机数
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.XunTong.MCloudPostInfo.signature">
            <summary>
            签名
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.XunTong.MCloudPostInfo.data">
            <summary>
            数据
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.XunTong.OrgUpdateRusultInfo.data">
            <summary>
            返回值
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.XunTong.OrgUpdateRusultInfo.error">
             <summary>
            错误信息，如果success=false，携带此信息
             </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.XunTong.OrgUpdateRusultInfo.errorCode">
            <summary>
            错误代码
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.XunTong.OrgUpdateRusultInfo.success">
            <summary>
            允许部分成功，有一条导入失败，就返回false,是否成功，true|false
            </summary>
        </member>
        <member name="T:Kingdee.BOS.BusinessEntity.XunTong.PrivateKeyRequest">
            <summary>
            获取私钥请求信息
            </summary>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.XunTong.PrivateKeyRequest.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.XunTong.PrivateKeyRequest.eid">
            <summary>
            企业 3G 号
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.XunTong.PrivateKeyRequest.sn">
            <summary>
            特征码(eid 和 sn 两者必填一个)
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.XunTong.PrivateKeyRequest.custName">
            <summary>
            (可选 )企业名称
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.XunTong.PrivateKeyRequest.email">
            <summary>
            (可选 )注册邮箱
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.XunTong.PrivateKeyRequest.password">
            <summary>
            (可选 )密码
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.XunTong.PrivateKeyRequest.serverURL">
            <summary>
            (可选 )EMP 服务器地址
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.XunTong.PrivateKeyRequest.name">
            <summary>
            ( 可选 )联系人
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.XunTong.PrivateKeyRequest.phone">
            <summary>
            ( 可选 )联系电话
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.XunTong.PrivateKeyRequest.businessType">
            <summary>
            业务线名称
            </summary>
        </member>
        <member name="T:Kingdee.BOS.BusinessEntity.XunTong.PrivateKeyResponseInfo">
            <summary>
            获取私钥的返回信息
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.XunTong.PrivateKeyResponseInfo.success">
            <summary>
            是否成功 
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.XunTong.PrivateKeyResponseInfo.error">
            <summary>
            错误信息
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.XunTong.PrivateKeyResponseInfo.errorCode">
            <summary>
            错误代码
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.XunTong.PrivateKeyResponseInfo.data">
            <summary>
            私钥信息
            </summary>
        </member>
        <member name="T:Kingdee.BOS.BusinessEntity.XunTong.PrivateKeyInfo">
            <summary>
            私钥信息
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.XunTong.PrivateKeyInfo.eid">
            <summary>
            企业3g号
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.XunTong.PrivateKeyInfo.key">
            <summary>
            私钥
            </summary>
        </member>
        <member name="T:Kingdee.BOS.BusinessEntity.XunTong.UserDTOInfo">
            <summary>
            用户数据传输对象
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.XunTong.UserDTOInfo.UserId">
            <summary>
            用户ID
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.XunTong.UserDTOInfo.Name">
            <summary>
            账号
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.XunTong.UserDTOInfo.Password">
            <summary>
            密码
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.XunTong.UserDTOInfo.PasswordSalt">
            <summary>
            密码调味剂
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.XunTong.UserDTOInfo.Phone">
            <summary>
            移动电话
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.XunTong.UserDTOInfo.Email">
            <summary>
            邮箱
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.XunTong.UserDTOInfo.OrgId">
            <summary>
            组织
            </summary>
        </member>
        <member name="T:Kingdee.BOS.BusinessEntity.XunTong.UserInfo">
            <summary>
            讯通的用户信息
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.XunTong.UserInfo.id">
            <summary>
            用户id,长度不超过50
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.XunTong.UserInfo.personId">
            <summary>
            职员ID
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.XunTong.UserInfo.gender">
            <summary>
            性别，0：未知，1：男，2：女
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.XunTong.UserInfo.name">
            <summary>
            职员姓名
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.XunTong.UserInfo.picture">
            <summary>
            头像URL
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.XunTong.UserInfo.phone">
            <summary>
            手机
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.XunTong.UserInfo.email">
            <summary>
            邮箱
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.XunTong.UserInfo.orgJobs">
            <summary>
            该职员所属组织职位集合
            </summary>
        </member>
        <member name="T:Kingdee.BOS.BusinessEntity.XunTong.RequestInfo">
            <summary>
            向讯通请求的信息类
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.XunTong.RequestInfo.Nonce">
            <summary>
            16位以内随机字符串,必须保证每次请求都不一样
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.XunTong.RequestInfo.MId">
            <summary>
            在mcloud注册的企业MID
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.XunTong.RequestInfo.Data">
            <summary>
            加密后的json串
            </summary>
        </member>
        <member name="T:Kingdee.BOS.BusinessEntity.Voucher.VchBuildReport">
            <summary>
            凭证生成报告实体
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.Voucher.VchBuildReport.BillType">
            <summary>
            单据类型
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.Voucher.VchBuildReport.FID">
            <summary>
            内码
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.Voucher.VchBuildReport.BillNo">
            <summary>
            单据编码
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.Voucher.VchBuildReport.UserID">
            <summary>
            操作员
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.Voucher.VchBuildReport.OpDate">
            <summary>
            操作日期
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.Voucher.VchBuildReport.Entry">
            <summary>
            报告明细
            </summary>
        </member>
        <member name="T:Kingdee.BOS.BusinessEntity.Voucher.VchBuildReportEntry">
            <summary>
            凭证生成报告明细实体
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.Voucher.VchBuildReportEntry.BizBillFormKey">
            <summary>
            来源业务单据标识
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.Voucher.VchBuildReportEntry.Message">
            <summary>
            生成业务凭证报告信息
            </summary>
        </member>
        <member name="T:Kingdee.BOS.BusinessEntity.Voucher.VCHEntryAcctMap">
            <summary>
            凭证分录预设科目
            </summary>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.Voucher.VCHEntryAcctMap.op_Implicit(Kingdee.BOS.Orm.DataEntity.DynamicObject)~Kingdee.BOS.BusinessEntity.Voucher.VCHEntryAcctMap">
            <summary>支持从DynamicObject隐式转化到VCHEntryAcctMap类型</summary>
            <param name="obj">要隐式转换的动态实体</param>
            <returns>新构建的VCHEntryAcctMap对象</returns>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.Voucher.VCHEntryAcctMap.#ctor(Kingdee.BOS.Orm.DataEntity.DynamicObject)">
            <summary>创建 VCHEntryAcctMap 实例</summary>
            <param name="obj">视图访问类实际操作的动态实体，不能为null</param>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.Voucher.VCHEntryAcctMap.Id">
            <summary>
            主键
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.Voucher.VCHEntryAcctMap.Account">
            <summary>
            科目取数规则
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.Voucher.VCHEntryAcctMap.AccountItem">
            <summary>
            科目对应的核算项目取数规则
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.Voucher.VCHEntryAcctMap.DCDirctory">
            <summary>
            借贷方向
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.Voucher.VCHEntryAcctMap.AmountFor">
            <summary>
            原币金额取数规则
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.Voucher.VCHEntryAcctMap.Qty">
            <summary>
            数量取数规则
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.Voucher.VCHEntryAcctMap.Price">
            <summary>
            单价取数规则
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.Voucher.VCHEntryAcctMap.ScopeFilter">
            <summary>
            数据范围（过滤条件）
            </summary>
        </member>
        <member name="T:Kingdee.BOS.BusinessEntity.Voucher.VCHEntryType">
            <summary>
            会计分录类型
            </summary>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.Voucher.VCHEntryType.op_Implicit(Kingdee.BOS.Orm.DataEntity.DynamicObject)~Kingdee.BOS.BusinessEntity.Voucher.VCHEntryType">
            <summary>支持从DynamicObject隐式转化到VCHEntryType类型</summary>
            <param name="obj">要隐式转换的动态实体</param>
            <returns>新构建的VCHEntryType对象</returns>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.Voucher.VCHEntryType.#ctor(Kingdee.BOS.Orm.DataEntity.DynamicObject)">
            <summary>创建 VCHEntryType 实例</summary>
            <param name="obj">视图访问类实际操作的动态实体，不能为null</param>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.Voucher.VCHEntryType.Id">
            <summary>
            主键
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.Voucher.VCHEntryType.Number">
            <summary>
            会计分录类型编码
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.Voucher.VCHEntryType.Name">
            <summary>
            会计分录类型名称
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.Voucher.VCHEntryType.VchEntryTypeEntry">
            <summary>
            会计分录行类型分录
            </summary>
        </member>
        <member name="T:Kingdee.BOS.BusinessEntity.Voucher.VCHEntryTypeEntry">
            <summary>
            会计分录行类型分录
            </summary>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.Voucher.VCHEntryTypeEntry.op_Implicit(Kingdee.BOS.Orm.DataEntity.DynamicObject)~Kingdee.BOS.BusinessEntity.Voucher.VCHEntryTypeEntry">
            <summary>支持从DynamicObject隐式转化到VCHEntryTypeEntry类型</summary>
            <param name="obj">要隐式转换的动态实体</param>
            <returns>新构建的VCHEntryTypeEntry对象</returns>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.Voucher.VCHEntryTypeEntry.#ctor(Kingdee.BOS.Orm.DataEntity.DynamicObject)">
            <summary>创建 VCHEntryType 实例</summary>
            <param name="obj">视图访问类实际操作的动态实体，不能为null</param>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.Voucher.VCHEntryTypeEntry.Id">
            <summary>
            主键
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.Voucher.VCHEntryTypeEntry.SourceBill">
            <summary>
            会计分录类型编码
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.Voucher.VCHEntryTypeEntry.SourceBillName">
            <summary>
            会计分录类型名称
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.Voucher.VCHEntryTypeEntry.Factors">
            <summary>
            会计分录类型名称
            </summary>
        </member>
        <member name="T:Kingdee.BOS.BusinessEntity.Voucher.VCHServiceType">
            <summary>
            凭证事物类型对象
            </summary>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.Voucher.VCHServiceType.op_Implicit(Kingdee.BOS.Orm.DataEntity.DynamicObject)~Kingdee.BOS.BusinessEntity.Voucher.VCHServiceType">
            <summary>支持从DynamicObject隐式转化到VCHServiceType类型</summary>
            <param name="obj">要隐式转换的动态实体</param>
            <returns>新构建的VCHServiceType对象</returns>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.Voucher.VCHServiceType.#ctor(Kingdee.BOS.Orm.DataEntity.DynamicObject)">
            <summary>创建 VCHServiceType 实例</summary>
            <param name="obj">视图访问类实际操作的动态实体，不能为null</param>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.Voucher.VCHServiceType.Id">
            <summary>
            主键
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.Voucher.VCHServiceType.Number">
            <summary>
            凭证事物类型编码
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.Voucher.VCHServiceType.Name">
            <summary>
            凭证事物类型名称
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.Voucher.VCHServiceType.AcctingPoint">
            <summary>
            记账时点
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.Voucher.VCHServiceType.AcctingCtrlType">
            <summary>
            记总账控制:必须记账，可记账，不记账
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.Voucher.VCHServiceType.SourceBill">
            <summary>
            目标单据
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.Voucher.VCHServiceType.SourceBillNumber">
            <summary>
            目标单据编码
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.Voucher.VCHServiceType.SourceBillName">
            <summary>
            目标单据名称
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.Voucher.VCHServiceType.CashFlow">
            <summary>
            是否录入现金流量
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.Voucher.VCHServiceType.DocumentStatus">
            <summary>
            数据状态
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.Voucher.VCHServiceType.ForbidStatus">
            <summary>
            禁用状态
            </summary>
        </member>
        <member name="T:Kingdee.BOS.BusinessEntity.Voucher.VCHTemplate">
            <summary>
            凭证模板
            </summary>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.Voucher.VCHTemplate.op_Implicit(Kingdee.BOS.Orm.DataEntity.DynamicObject)~Kingdee.BOS.BusinessEntity.Voucher.VCHTemplate">
            <summary>支持从DynamicObject隐式转化到VCHTemplate类型</summary>
            <param name="obj">要隐式转换的动态实体</param>
            <returns>新构建的VCHTemplate对象</returns>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.Voucher.VCHTemplate.#ctor(Kingdee.BOS.Orm.DataEntity.DynamicObject)">
            <summary>创建 VCHTemplate 实例</summary>
            <param name="obj">视图访问类实际操作的动态实体，不能为null</param>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.Voucher.VCHTemplate.Id">
            <summary>
            唯一标识
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.Voucher.VCHTemplate.Number">
            <summary>
            编码
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.Voucher.VCHTemplate.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.Voucher.VCHTemplate.AccountBookID">
            <summary>
            账簿 
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.Voucher.VCHTemplate.VCHServicesTypeID">
            <summary>
            凭证事物类型 
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.Voucher.VCHTemplate.BillFormID">
            <summary>
            来源业务单据标识
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.Voucher.VCHTemplate.VoucherGroup">
            <summary>
            凭证字取数规则
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.Voucher.VCHTemplate.VoucherDate">
            <summary>
            凭证日期取数规则
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.Voucher.VCHTemplate.Attachments">
            <summary>
            附件数取数规则
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.Voucher.VCHTemplate.IsSysDefault">
            <summary>
            是否默认
            </summary>
        </member>
        <member name="T:Kingdee.BOS.BusinessEntity.XunTong.UserPersonMapInfo">
            <summary>
            用户职员映射信息
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.XunTong.UserPersonMapInfo.userId">
            <summary>
            用户ID
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.XunTong.UserPersonMapInfo.userName">
            <summary>
            用户登录名
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.XunTong.UserPersonMapInfo.personId">
            <summary>
            职员ID
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.XunTong.UserPersonMapInfo.userSalt">
            <summary>
            密码
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.XunTong.UserPersonMapInfo.saltType">
            <summary>
            erp类型
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.XunTong.UserPersonMapInfo.salt">
            <summary>
            密码调料
            </summary>
        </member>
        <member name="T:Kingdee.BOS.BusinessEntity.XunTong.UserPersonMapRequest">
            <summary>
            用户职员映射请求信息
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.XunTong.UserPersonMapRequest.eid">
            <summary>
            企业MID
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.XunTong.UserPersonMapRequest.dataCenterId">
            <summary>
            帐套(数据中心ID)
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.XunTong.UserPersonMapRequest.mapping">
            <summary>
            用户职员映射信息
            </summary>
        </member>
        <member name="T:Kingdee.BOS.BusinessEntity.XunTong.UserResponseInfo">
            <summary>
            用户导入讯通响应信息
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.XunTong.UserResponseInfo.success">
            <summary>
            允许部分成功，有一条导入失败，就返回false,是否成功，true|false
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.XunTong.UserResponseInfo.error">
             <summary>
            错误信息，如果success=false，携带此信息
             </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.XunTong.UserResponseInfo.errorCode">
            <summary>
            错误代码
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.XunTong.UserResponseInfo.data">
            <summary>
            返回值,类似Map对象或者Array数组对象
            </summary>
        </member>
        <member name="T:Kingdee.BOS.BusinessEntity.XunTong.UserRequestInfo">
            <summary>
            导入讯通的用户信息
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.XunTong.UserRequestInfo.eid">
            <summary>
            企业MID
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.XunTong.UserRequestInfo.dataCenterId">
            <summary>
            数据中心ID
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.XunTong.UserRequestInfo.persons">
            <summary>
            用户列表
            </summary>
        </member>
        <member name="T:Kingdee.BOS.BusinessEntity.XunTong.XunTongSettingInfo">
            <summary>
            讯通设置信息
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.XunTong.XunTongSettingInfo.CompanyName">
            <summary>
            公司名称
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.XunTong.XunTongSettingInfo.MCloudID">
            <summary>
            eid
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.XunTong.XunTongSettingInfo.KeyFileName">
            <summary>
            mcloud私钥文件
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.XunTong.XunTongSettingInfo.IsAgreed">
            <summary>
            是否同意协议
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.XunTong.XunTongSettingInfo.InvitationCode">
            <summary>
            演示版SN
            </summary>
        </member>
        <member name="T:Kingdee.BOS.BusinessEntity.XunTong.XunTongSyncHelper">
            <summary>
            讯通云+端同步帮助类
            </summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.XunTong.XunTongSyncHelper._actions">
            <summary>
            需要同步的action
            </summary>
        </member>
        <member name="F:Kingdee.BOS.BusinessEntity.XunTong.XunTongSyncHelper.locker">
            <summary>
            锁
            </summary>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.XunTong.XunTongSyncHelper.Add(Kingdee.BOS.JSON.JSONObject)">
            <summary>
            新增action
            </summary>
            <param name="action"></param>
        </member>
        <member name="M:Kingdee.BOS.BusinessEntity.XunTong.XunTongSyncHelper.Clear">
            <summary>
            清除action
            </summary>
        </member>
        <member name="P:Kingdee.BOS.BusinessEntity.XunTong.XunTongSyncHelper.Actions">
            <summary>
            需要同步的action
            </summary>
        </member>
    </members>
</doc>
